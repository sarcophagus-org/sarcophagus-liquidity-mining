{"version":3,"sources":["web3/chains.js","web3/useProvider.js","web3/index.js","web3/useListeners.js","dataContext/index.js","dataContext/contracts.js","dataContext/totalRewards.js","dataContext/totalStakes.js","dataContext/blocks.js","dataContext/myStakes.js","dataContext/myRewards.js","dataContext/myBalances.js","dataContext/abilities.js","assets/images/logo.png","assets/images/wallet.svg","components/Header.js","assets/images/question.svg","components/shared/Tooltip.js","components/shared/Value.js","components/Blocks.js","assets/images/usdc-small.svg","assets/images/usdt-small.svg","assets/images/dai-small.svg","components/GlobalStats.js","dataContext/transactions.js","components/shared/Button.js","assets/images/usdc.svg","assets/images/usdt.svg","assets/images/dai.svg","assets/images/lock.svg","components/StakeForm.js","components/Claim.js","assets/images/unlock.svg","components/Unlock.js","components/Body.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["supportedChains","parseInt","process","context","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","web3Modal","Web3Modal","cacheProvider","theme","defaultName","defaultWeb3","name","account","chainId","provider","signerOrProvider","makeInjectedProvider","web3Provider","selectedAddress","getSigner","useProvider","useState","setWeb3Provider","reloadedProvider","myProvider","setMyProvider","useEffect","on","includes","ethers","providers","Web3Provider","toast","dark","toastId","clearCachedProvider","off","window","location","reload","accounts","length","removeAllListeners","useListeners","cachedProvider","Promise","resolve","reject","connect","then","userSuppliedProvider","catch","console","error","providerKeys","defaultProvider","getDefaultProvider","network","getFallbackProvider","a","createContext","displayName","Provider","children","value","createWeb3Root","useWeb3","useContext","useLiquidityMiningContract","addresses","setAddresses","liquidityMining","useAddresses","liquidityMiningContract","setLiquidityMiningContract","Contract","LiquidityMining","abi","useDecimals","contract","decimals","setDecimals","DataProvider","getDecimalNumber","bigNumber","makeNumeral","numeral","utils","formatUnits","formatNumber","number","decimalsToShow","Math","abs","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","moneyString","money","counterString","seconds","Number","d","floor","h","m","s","dDisplay","hDisplay","mDisplay","sDisplay","replace","dateString","Date","StateEnum","Object","freeze","NotScheduled","Scheduled","Ready","Active","Over","usdcContract","setUsdcContract","usdc","ERC20","useUsdcContract","usdtContract","setUsdtContract","usdt","useUsdtContract","daiContract","setDaiContract","dai","useDaiContract","sarcoContract","setSarcoContract","sarco","useSarcoContract","decimalsUsdc","decimalsUsdt","decimalsDai","decimalsSarco","totalRewards","BigNumber","from","totalSarcoRewards","setTotalSarcoRewards","updateTotalRewards","removeListener","useTotalRewards","totalClaimedRewards","totalClaimedSarcoRewards","setTotalClaimedSarcoRewards","getClaimedRewards","_","_sarco","add","useTotalClaimedRewards","totalStakeUsdc","setTotalStakeUsdc","addUsdc","_usdc","removeUsdc","sub","useTotalStakeUsdc","totalStakeUsdt","setTotalStakeUsdt","addUsdt","__","_usdt","removeUsdt","useTotalStakeUsdt","totalStakeDai","setTotalStakeDai","addDai","___","_dai","removeDai","useTotalStakeDai","currentBlock","setCurrentBlock","getBlockNumber","blockNumber","useCurrentBlock","currentTime","now","setCurrentTime","getBlock","block","timestamp","timer","setInterval","clearInterval","useCurrentTime","startTime","setStartTime","updateStartTime","useStartTime","firstStakeTime","setFirstStakeTime","updateFirstStake","useFirstStakeTime","endTime","setEndTime","updateEndTime","_endTime","useEndTime","rewardsPerTime","setRewardsPerTime","eq","div","useRewardsPerTime","timeUntilKickoff","setTimeUntilKickoff","gt","useTimeUntilKickoff","elapsedTime","setElapsedTime","lt","useElapsedTime","remainingTime","setRemainingTime","useRemainingTime","totalEmittedRewards","mul","totalUnemittedRewards","totalUnclaimedRewards","myStakeUsdc","setMyStakeUsdc","userStakeUsdc","myStakeFilter","filters","Stake","myWithdrawFilter","Withdraw","useMyStakeUsdc","myStakeUsdt","setMyStakeUsdt","userStakeUsdt","useMyStakeUsdt","myStakeDai","setMyStakeDai","userStakeDai","useMyStakeDai","isActive","myRewardsPerTime","rewardPerTime","rewardIncrement","setRewardIncrement","all","totalStake","totalUserStake","total","user","useMyRewardsPerTime","myPendingRewards","pendingRewards","setPendingRewards","stake","callStatic","payout","reward","useMyPendingRewards","myClaimedRewards","claimedRewards","setClaimedRewards","userClaimedRewards","addMyClaimedRewards","rewards","myClaimedRewardsFilter","Payout","useMyClaimedRewards","myTotalRewards","myUsdcBalance","balance","setBalance","balanceOf","useMyUsdcBalance","myUsdtBalance","useMyUsdtBalance","myDaiBalance","useMyDaiBalance","myUsdcAllowance","allowance","setAllowance","address","useMyUsdcAllowance","myUsdtAllowance","useMyUsdtAllowance","myDaiAllowance","useMyDaiAllowance","systemState","state","setState","useSystemState","canStake","setCanStake","useCanStake","canPayout","setCanPayout","useCanPayout","canWithdraw","setCanWithdraw","useCanWithdraw","dataContext","totalStakeStablecoins","myStakedStablecoins","createDataRoot","useData","AccountDisplay","fullStr","strLen","separator","charsToShow","frontChars","ceil","backChars","substr","truncate","className","onClick","Top","src","logo","alt","wallet","Title","liquidityMiningState","setLiquidityMiningState","badgeColor","setBadgeColor","target","rel","href","Header","Tooltip","content","question","ValueItem","bigValue","bold","icon","tooltipText","Row","Container","currentTimeTooltip","Blocks","SectionContainer","topBorder","GlobalStats","useTransaction","pending","setPending","contractCall","useCallback","contractFn","parameters","pendingMessage","failedMessage","successMessage","successCallback","completedCallback","txResponse","info","autoClose","closeOnClick","draggable","wait","txReceipt","dismiss","status","success","Button","disabled","rest","StakeForm","setUsdc","setUsdt","setDai","usdcBig","setUsdcBig","usdtBig","setUsdtBig","daiBig","setDaiBig","buttonText","setButtonText","callData","setCallData","buttonEnabled","setButtonEnabled","parseUnits","toFixed","approve","pow","Input","currency","setValue","inputDisable","type","step","Array","fill","join","slice","makeStep","required","id","onChange","e","normalizedValue","inputValue","min","calculateValue","max","placeholder","onSubmit","preventDefault","usdcIcon","usdtIcon","daiIcon","lock","Claim","payoutEnabled","setPayoutEnabled","Unlock","withdrawEnabled","setWithdrawEnabled","withdraw","unlock","Body","Footer","packageJson","version","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","closeButton","document","getElementById"],"mappings":"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","file":"static/js/main.b7f35e73.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\n\nconst supportedChains = () => {\n  const dev = process.env.NODE_ENV !== 'production' ? [parseInt(process.env.REACT_APP_LOCAL_CHAINID, 10)] : []\n  return [...dev, parseInt(process.env.REACT_APP_CHAINID, 10)]\n}\n\nconst useAddresses = chainId => {\n  const [addresses, setAddresses] = useState()\n\n  useEffect(() => {\n    if (chainId === parseInt(process.env.REACT_APP_LOCAL_CHAINID, 10)) {\n      setAddresses({\n        liquidityMining: process.env.REACT_APP_LOCAL_LIQUIDITY_MINING_ADDRESS\n      })\n    } else {\n      setAddresses({\n        liquidityMining: process.env.REACT_APP_LIQUIDITY_MINING_ADDRESS\n      })\n    }\n  }, [chainId])\n\n  return addresses\n}\n\nexport {\n  supportedChains,\n  useAddresses\n}","import { useEffect, useState } from 'react'\nimport { ethers, getDefaultProvider } from 'ethers'\nimport Web3Modal from 'web3modal'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport { supportedChains } from './chains'\nimport { useListeners } from './useListeners'\n\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider,\n    options: {\n      infuraId: process.env.REACT_APP_INFURA_API_KEY,\n    },\n  },\n}\n\nconst web3Modal = new Web3Modal({\n  providerOptions,\n  cacheProvider: true,\n  theme: 'dark'\n})\n\nconst defaultName = 'not connected'\nconst defaultWeb3 = {\n  name: defaultName,\n  account: false,\n  chainId: null,\n  provider: null,\n  signerOrProvider: null,\n}\n\nfunction makeInjectedProvider(web3Provider) {\n  return {\n    name: 'injected provider',\n    account: web3Provider.provider.selectedAddress,\n    chainId: parseInt(web3Provider.provider.chainId),\n    provider: web3Provider,\n    signerOrProvider: web3Provider.getSigner(),\n  }\n}\n\nfunction getInjectedProvider(web3Modal) {\n  return new Promise((resolve, reject) => {\n    web3Modal.connect().then(userSuppliedProvider => {\n      const web3Provider = new ethers.providers.Web3Provider(userSuppliedProvider)\n      resolve(makeInjectedProvider(web3Provider))\n    }).catch(reject)\n  })\n}\n\nfunction getLocalProvider() {\n  const localProvider = new ethers.providers.JsonRpcProvider(process.env.REACT_APP_LOCAL_PROVIDER_URL)\n  return new Promise((resolve, reject) => {\n    localProvider.detectNetwork().then(network => {\n      resolve({\n        name: 'local provider',\n        account: false,\n        chainId: network.chainId,\n        provider: localProvider,\n        signerOrProvider: localProvider,\n      })\n    }).catch(reject)\n  })\n}\n\nfunction getFallbackProvider() {\n  const providerKeys = {}\n  if (process.env.REACT_APP_INFURA_API_KEY) providerKeys.infura = process.env.REACT_APP_INFURA_API_KEY\n  if (process.env.REACT_APP_ALCHEMY_API_KEY) providerKeys.alchemy = process.env.REACT_APP_ALCHEMY_API_KEY\n  if (process.env.REACT_APP_ETHERSCAN_API_KEY) providerKeys.etherscan = process.env.REACT_APP_ETHERSCAN_API_KEY\n\n  const defaultProvider = getDefaultProvider(parseInt(process.env.REACT_APP_CHAINID, 10), providerKeys)\n\n  return {\n    name: 'fallback provider',\n    account: false,\n    chainId: defaultProvider.network.chainId,\n    provider: defaultProvider,\n    signerOrProvider: defaultProvider,\n  }\n}\n\nfunction useProvider() {\n  const [web3Provider, setWeb3Provider] = useState(defaultWeb3)\n\n  const reloadedProvider = useListeners(web3Provider.provider?.provider, web3Modal)\n  useEffect(() => {\n    if (!reloadedProvider) {\n      setWeb3Provider(defaultWeb3)\n    } else {\n      setWeb3Provider(makeInjectedProvider(reloadedProvider))\n    }\n  }, [reloadedProvider])\n\n  useEffect(() => {\n    if (web3Provider.name !== defaultName) return\n\n    if (web3Modal.cachedProvider || (web3Provider.signerOrProvider && supportedChains().includes(parseInt(web3Provider.signerOrProvider.chainId)))) {\n      getInjectedProvider(web3Modal)\n        .then(setWeb3Provider)\n        .catch(console.error)\n    } else if (process.env.NODE_ENV === 'development') {\n      getLocalProvider()\n        .then(setWeb3Provider)\n        .catch(() => setWeb3Provider(getFallbackProvider()))\n    } else {\n      setWeb3Provider(getFallbackProvider())\n    }\n  }, [web3Provider.name, web3Provider.signerOrProvider])\n\n  return web3Provider\n}\n\nasync function connect() {\n  await web3Modal.connect()\n}\n\nexport { useProvider, connect }","import { createContext, useContext } from 'react'\nimport { useProvider } from './useProvider.js'\n\nlet context\n\nfunction createWeb3Root() {\n  context = createContext()\n\n  context.displayName = 'Web3 Provider'\n  const Provider = context.Provider\n\n  return function ({ children }) {\n    const web3Provider = useProvider()\n\n    return (\n      <Provider value={web3Provider}>\n        {children}\n      </Provider>\n    )\n  }\n}\n\nconst Web3Provider = createWeb3Root()\n\nfunction useWeb3() {\n  return useContext(context)\n}\n\nexport { Web3Provider, useWeb3 }","import { useState, useEffect } from 'react'\nimport { ethers } from 'ethers'\nimport { toast } from 'react-toastify'\nimport { supportedChains } from './chains'\n\nfunction useListeners(provider, web3Modal) {\n  const [myProvider, setMyProvider] = useState(null)\n\n  useEffect(() => {\n    // subscribe to connect events\n    web3Modal.on('connect', provider => {\n      if (!supportedChains().includes(parseInt(provider.chainId))) {\n        toast.dark('Switch to a supported network', { toastId: 'switchNetwork' })\n        web3Modal.clearCachedProvider()\n        setMyProvider(null)\n      } else {\n        const web3Provider = new ethers.providers.Web3Provider(provider)\n        setMyProvider(web3Provider)\n        toast.dark('Connected', { toastId: 'connected' })\n      }\n    })\n\n    return () => {\n      web3Modal.off('connect')\n    }\n  }, [web3Modal])\n\n  useEffect(() => {\n    if (!provider) return\n\n    // subscribe to Network events\n    provider.on('chainChanged', chainId => {\n      if (!supportedChains().includes(parseInt(chainId))) {\n        toast.dark('Switch to a supported network', { toastId: 'switchNetwork' })\n        web3Modal.clearCachedProvider()\n        setMyProvider(null)\n      } else {\n        window.location.reload()\n      }\n    })\n\n    // subscribe to account change events\n    provider.on('accountsChanged', accounts => {\n      if (accounts.length === 0) {\n        toast.dark('Account disconnected', { toastId: 'disconnected' })\n        web3Modal.clearCachedProvider()\n        setMyProvider(null)\n      } else {\n        toast('Account changed', { toastId: 'connected' })\n        setMyProvider(null)\n      }\n    })\n\n    // subscribe to provider disconnection\n    provider.on('disconnect', () => {\n      toast.dark('Account disconnected', { toastId: 'disconnected' })\n      web3Modal.clearCachedProvider()\n      setMyProvider(null)\n    })\n\n    // unsubscribe\n    return () => {\n      provider.removeAllListeners()\n    }\n  }, [provider, web3Modal])\n\n  return myProvider\n}\n\nexport { useListeners }","import { createContext, useContext, useState, useEffect } from 'react'\nimport { utils } from 'ethers'\nimport numeral from 'numeral'\nimport {\n  useLiquidityMiningContract,\n  useUsdcContract,\n  useUsdtContract,\n  useDaiContract,\n  useSarcoContract,\n  useDecimals\n} from './contracts'\nimport {\n  useTotalStakeUsdc,\n  useTotalStakeUsdt,\n  useTotalStakeDai,\n} from './totalStakes'\nimport {\n  useTotalRewards,\n  useTotalClaimedRewards,\n  useRewardsPerTime,\n} from './totalRewards'\nimport {\n  useCurrentBlock,\n  useCurrentTime,\n  useStartTime,\n  useFirstStakeTime,\n  useEndTime,\n  useElapsedTime,\n  useRemainingTime,\n  useTimeUntilKickoff,\n} from './blocks'\nimport {\n  useMyStakeUsdc,\n  useMyStakeUsdt,\n  useMyStakeDai,\n} from './myStakes'\nimport {\n  useMyPendingRewards,\n  useMyClaimedRewards,\n  useMyRewardsPerTime,\n} from './myRewards'\nimport {\n  useMyUsdcBalance,\n  useMyUsdtBalance,\n  useMyDaiBalance,\n  useMyUsdcAllowance,\n  useMyUsdtAllowance,\n  useMyDaiAllowance,\n} from './myBalances'\nimport {\n  useCanStake,\n  useCanPayout,\n  useCanWithdraw,\n} from './abilities'\n\nlet context\n\nconst createDataRoot = () => {\n  context = createContext()\n\n  context.displayName = 'Data Provider'\n  const Provider = context.Provider\n  \n  const getDecimalNumber = (bigNumber, decimals) => {\n      return makeNumeral(bigNumber, decimals).value()\n    }\n\n  const makeNumeral = (bigNumber, decimals) => {\n    return numeral(utils.formatUnits(bigNumber, decimals))\n  }\n\n  const formatNumber = (number, decimals, decimalsToShow=6) => {\n    if (number === \"NaN\" || number === 0 || !decimals) return \"0\"\n    return Math.abs(number).toLocaleString(undefined, {minimumFractionDigits: decimalsToShow, maximumFractionDigits: decimalsToShow})\n  }\n\n  const moneyString = (bigNumber, decimals, decimalsToShow) => {\n    const money = makeNumeral(bigNumber, decimals).value()\n    const localeString = formatNumber(money, decimals, decimalsToShow)\n    return localeString\n  }\n\n  const counterString = seconds => {\n    seconds = Number(seconds)\n    var d = Math.floor(seconds / (3600 * 24))\n    var h = Math.floor(seconds % (3600 * 24) / 3600)\n    var m = Math.floor(seconds % 3600 / 60)\n    var s = Math.floor(seconds % 60)\n\n    var dDisplay = d > 0 ? d + (d === 1 ? \" day, \" : \" days, \") : \"\"\n    var hDisplay = h > 0 ? h + (h === 1 ? \" hour, \" : \" hours, \") : \"\"\n    var mDisplay = m > 0 ? m + (m === 1 ? \" minute, \" : \" minutes, \") : \"\"\n    var sDisplay = s > 0 ? s + (s === 1 ? \" second\" : \" seconds\") : \"\"\n\n    if (!dDisplay && !hDisplay && !mDisplay && !sDisplay) sDisplay = \"0 seconds\"\n\n    return (dDisplay + hDisplay + mDisplay + sDisplay).replace(/,\\s*$/, \"\")\n  }\n\n  const dateString = seconds => {\n    return new Date(seconds * 1000).toLocaleString()\n  }\n\n  const StateEnum = Object.freeze({\n    NotScheduled: 1,\n    Scheduled: 2,\n    Ready: 3,\n    Active: 4,\n    Over: 5,\n  })\n\n  const useSystemState = (startTime, timeUntilKickoff, firstStakeTime, remainingTime) => {\n    const [state, setState] = useState(StateEnum.NotScheduled)\n\n    useEffect(() => {\n      if (startTime.eq(0)) {\n        setState(StateEnum.NotScheduled)\n      } else if (timeUntilKickoff.gt(0)) {\n        setState(StateEnum.Scheduled)\n      } else if (firstStakeTime.eq(0)) {\n        setState(StateEnum.Ready)\n      } else if (remainingTime.gt(0)) {\n        setState(StateEnum.Active)\n      } else {\n        setState(StateEnum.Over)\n      }\n    }, [startTime, timeUntilKickoff, firstStakeTime, remainingTime])\n\n    return state\n  }\n\n  return ({ children }) => {\n    const liquidityMining = useLiquidityMiningContract()\n\n    const usdcContract = useUsdcContract(liquidityMining)\n    const usdtContract = useUsdtContract(liquidityMining)\n    const daiContract = useDaiContract(liquidityMining)\n    const sarcoContract = useSarcoContract(liquidityMining)\n\n    const decimalsUsdc = useDecimals(usdcContract)\n    const decimalsUsdt = useDecimals(usdtContract)\n    const decimalsDai = useDecimals(daiContract)\n    const decimalsSarco = useDecimals(sarcoContract)\n\n    const totalRewards = useTotalRewards(liquidityMining)\n    const totalClaimedRewards = useTotalClaimedRewards(liquidityMining)\n\n    const totalStakeUsdc = useTotalStakeUsdc(liquidityMining)\n    const totalStakeUsdt = useTotalStakeUsdt(liquidityMining)\n    const totalStakeDai = useTotalStakeDai(liquidityMining)\n\n    const currentBlock = useCurrentBlock()\n    const currentTime = useCurrentTime(currentBlock)\n    const startTime = useStartTime(liquidityMining)\n    const firstStakeTime = useFirstStakeTime(liquidityMining)\n    const endTime = useEndTime(liquidityMining)\n    const rewardsPerTime = useRewardsPerTime(totalRewards, startTime, firstStakeTime, endTime)\n\n    const timeUntilKickoff = useTimeUntilKickoff(currentTime, startTime)\n\n    const elapsedTime = useElapsedTime(currentTime, firstStakeTime, endTime)\n    const remainingTime = useRemainingTime(firstStakeTime, elapsedTime, endTime)\n    const totalEmittedRewards = elapsedTime.mul(rewardsPerTime)\n    const totalUnemittedRewards = remainingTime.mul(rewardsPerTime)\n    const totalUnclaimedRewards = totalEmittedRewards.sub(totalClaimedRewards)\n\n    const myStakeUsdc = useMyStakeUsdc(liquidityMining)\n    const myStakeUsdt = useMyStakeUsdt(liquidityMining)\n    const myStakeDai = useMyStakeDai(liquidityMining)\n\n    const isActive = startTime.gt(0) && timeUntilKickoff.eq(0) && firstStakeTime.gt(0) && remainingTime.gt(0) && (myStakeUsdc.add(myStakeUsdt).add(myStakeDai).gt(0))\n    const myRewardsPerTime = useMyRewardsPerTime(liquidityMining, currentBlock, rewardsPerTime, isActive)\n    const myPendingRewards = useMyPendingRewards(liquidityMining, currentBlock, currentTime, myRewardsPerTime, isActive)\n    const myClaimedRewards = useMyClaimedRewards(liquidityMining)\n\n    const myTotalRewards = myPendingRewards.add(myClaimedRewards)\n\n    const myUsdcBalance = useMyUsdcBalance(usdcContract, currentBlock)\n    const myUsdtBalance = useMyUsdtBalance(usdtContract, currentBlock)\n    const myDaiBalance = useMyDaiBalance(daiContract, currentBlock)\n\n    const myUsdcAllowance = useMyUsdcAllowance(liquidityMining, usdcContract, currentBlock)\n    const myUsdtAllowance = useMyUsdtAllowance(liquidityMining, usdtContract, currentBlock)\n    const myDaiAllowance = useMyDaiAllowance(liquidityMining, daiContract, currentBlock)\n\n    const systemState = useSystemState(startTime, timeUntilKickoff, firstStakeTime, remainingTime)\n\n    const canStake = useCanStake(systemState, StateEnum)\n    const canPayout = useCanPayout(myPendingRewards)\n    const canWithdraw = useCanWithdraw(myStakeUsdc, myStakeUsdt, myStakeDai)\n    const dataContext = {\n      liquidityMining, usdcContract, usdtContract, daiContract, sarcoContract,\n      decimalsUsdc, decimalsUsdt, decimalsDai,\n\n      totalRewards: moneyString(totalRewards, decimalsSarco, 0),\n      totalClaimedRewards: moneyString(totalClaimedRewards, decimalsSarco),\n      rewardsPerTime: moneyString(rewardsPerTime, decimalsSarco),\n      totalEmittedRewards: moneyString(totalEmittedRewards, decimalsSarco),\n      totalUnemittedRewards: moneyString(totalUnemittedRewards, decimalsSarco),\n      totalUnclaimedRewards: moneyString(totalUnclaimedRewards, decimalsSarco),\n\n      totalStakeUsdc: moneyString(totalStakeUsdc, decimalsUsdc),\n      totalStakeUsdt: moneyString(totalStakeUsdt, decimalsUsdt),\n      totalStakeDai: moneyString(totalStakeDai, decimalsDai),\n      totalStakeStablecoins: formatNumber(numeral(\n        getDecimalNumber(totalStakeUsdc, decimalsUsdc) +\n        getDecimalNumber(totalStakeUsdt, decimalsUsdt) +\n        getDecimalNumber(totalStakeDai, decimalsDai)\n      ).value(), decimalsDai),\n\n      currentTime: dateString(currentTime),\n      startTime: dateString(startTime),\n      firstStakeTime: dateString(firstStakeTime),\n      endTime: dateString(endTime),\n      timeUntilKickoff: counterString(timeUntilKickoff),\n      remainingTime: counterString(remainingTime),\n\n      myStakeUsdc: moneyString(myStakeUsdc, decimalsUsdc),\n      myStakeUsdt: moneyString(myStakeUsdt, decimalsUsdt),\n      myStakeDai: moneyString(myStakeDai, decimalsDai),\n      myStakedStablecoins: formatNumber(numeral(\n        getDecimalNumber(myStakeUsdc, decimalsUsdc) +\n        getDecimalNumber(myStakeUsdt, decimalsUsdt) +\n        getDecimalNumber(myStakeDai, decimalsDai)\n      ).value()),\n\n      myPendingRewards: moneyString(myPendingRewards, decimalsSarco),\n      myClaimedRewards: moneyString(myClaimedRewards, decimalsSarco),\n      myTotalRewards: moneyString(myTotalRewards, decimalsSarco),\n      myRewardsPerTime: moneyString(myRewardsPerTime, decimalsSarco),\n\n      myUsdcBalance: moneyString(myUsdcBalance, decimalsUsdc),\n      myUsdtBalance: moneyString(myUsdtBalance, decimalsUsdt),\n      myDaiBalance: moneyString(myDaiBalance, decimalsDai),\n\n      myUsdcAllowance,\n      myUsdtAllowance,\n      myDaiAllowance,\n\n      canStake,\n      canPayout,\n      canWithdraw,\n\n      systemState, StateEnum\n    }\n\n    return <Provider value={dataContext}>{children}</Provider>\n  }\n}\n\nconst DataProvider = createDataRoot()\n\nconst useData = () => {\n  return useContext(context)\n}\n\nexport { DataProvider, useData }","import { useState, useEffect } from 'react'\nimport { Contract } from 'ethers'\nimport { useWeb3 } from '../web3'\nimport { useAddresses } from '../web3/chains'\nimport LiquidityMining from '../../build-contracts/LiquidityMining2.json'\nimport ERC20 from '../../build-contracts/ERC20.json'\n\nconst useLiquidityMiningContract = () => {\n  const { chainId, signerOrProvider } = useWeb3()\n  const addresses = useAddresses(chainId)\n  const [liquidityMiningContract, setLiquidityMiningContract] = useState()\n\n  useEffect(() => {\n    if (!chainId || !addresses || !signerOrProvider) return\n\n    setLiquidityMiningContract(new Contract(addresses.liquidityMining, LiquidityMining.abi, signerOrProvider))\n  }, [chainId, signerOrProvider, addresses])\n\n  return liquidityMiningContract\n}\n\nconst useUsdcContract = (liquidityMining) => {\n  const { signerOrProvider } = useWeb3()\n  const [usdcContract, setUsdcContract] = useState()\n\n  useEffect(() => {\n    if (!liquidityMining || !signerOrProvider) return\n\n    liquidityMining.usdc().then(usdc => {\n      setUsdcContract(new Contract(usdc, ERC20.abi, signerOrProvider))\n    }).catch(console.error)\n  }, [liquidityMining, signerOrProvider])\n\n  return usdcContract\n}\n\nconst useUsdtContract = (liquidityMining) => {\n  const { signerOrProvider } = useWeb3()\n  const [usdtContract, setUsdtContract] = useState()\n\n  useEffect(() => {\n    if (!liquidityMining || !signerOrProvider) return\n\n    liquidityMining.usdt().then(usdt => {\n      setUsdtContract(new Contract(usdt, ERC20.abi, signerOrProvider))\n    }).catch(console.error)\n  }, [liquidityMining, signerOrProvider])\n\n  return usdtContract\n}\n\nconst useDaiContract = (liquidityMining) => {\n  const { signerOrProvider } = useWeb3()\n  const [daiContract, setDaiContract] = useState()\n\n  useEffect(() => {\n    if (!liquidityMining || !signerOrProvider) return\n\n    liquidityMining.dai().then(dai => {\n      setDaiContract(new Contract(dai, ERC20.abi, signerOrProvider))\n    }).catch(console.error)\n  }, [liquidityMining, signerOrProvider])\n\n  return daiContract\n}\n\nconst useSarcoContract = (liquidityMining) => {\n  const { signerOrProvider } = useWeb3()\n  const [sarcoContract, setSarcoContract] = useState()\n\n  useEffect(() => {\n    if (!liquidityMining || !signerOrProvider) return\n\n    liquidityMining.sarco().then(sarco => {\n      setSarcoContract(new Contract(sarco, ERC20.abi, signerOrProvider))\n    }).catch(console.error)\n  }, [liquidityMining, signerOrProvider])\n\n  return sarcoContract\n}\n\nconst useDecimals = (contract) => {\n  const [decimals, setDecimals] = useState(0)\n\n  useEffect(() => {\n    if (!contract) return\n\n    contract.decimals().then(decimals => {\n      setDecimals(decimals)\n    }).catch(console.error)\n  }, [contract])\n\n  return decimals\n}\n\nexport {\n  useLiquidityMiningContract,\n  useUsdcContract,\n  useUsdtContract,\n  useDaiContract,\n  useSarcoContract,\n  useDecimals\n}","import { useState, useEffect } from 'react'\nimport { BigNumber } from 'ethers'\n\nconst useTotalRewards = (liquidityMining) => {\n  const [totalSarcoRewards, setTotalSarcoRewards] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityMining) return\n\n    liquidityMining.totalRewards().then(sarco => {\n      setTotalSarcoRewards(sarco)\n    }).catch(console.error)\n\n    const updateTotalRewards = (totalRewards) => {\n      setTotalSarcoRewards(totalRewards)\n    }\n\n    liquidityMining.on('Deposit', updateTotalRewards)\n\n    return () => {\n      liquidityMining.removeListener('Deposit', updateTotalRewards)\n    }\n\n  }, [liquidityMining])\n\n  return totalSarcoRewards\n}\n\nconst useTotalClaimedRewards = (liquidityMining) => {\n  const [totalClaimedSarcoRewards, setTotalClaimedSarcoRewards] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityMining) return\n\n    liquidityMining.totalClaimedRewards().then(sarco => {\n        setTotalClaimedSarcoRewards(sarco)\n      }).catch(console.error)\n\n    const getClaimedRewards = (_, _sarco) => {\n      setTotalClaimedSarcoRewards(sarco => sarco.add(_sarco))\n    }\n\n    liquidityMining.on('Payout', getClaimedRewards)\n\n    return () => {\n      liquidityMining.removeListener('Payout', getClaimedRewards)\n    }\n  }, [liquidityMining])\n\n  return totalClaimedSarcoRewards\n}\n\nconst useRewardsPerTime = (totalRewards, startTime, firstStakeTime, endTime) => {\n  const [rewardsPerTime, setRewardsPerTime] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (startTime.eq(0)) {\n      setRewardsPerTime(BigNumber.from(0))\n      return\n    }\n\n    if (firstStakeTime.eq(0)) {\n      setRewardsPerTime(totalRewards.div(endTime.sub(startTime)))\n      return\n    }\n\n    setRewardsPerTime(totalRewards.div(endTime.sub(firstStakeTime)))\n  }, [totalRewards, startTime, firstStakeTime, endTime])\n\n  return rewardsPerTime\n}\n\nexport {\n  useTotalRewards,\n  useTotalClaimedRewards,\n  useRewardsPerTime,\n}\n","import { useState, useEffect } from 'react'\nimport { BigNumber } from 'ethers'\n\nconst useTotalStakeUsdc = (liquidityMining) => {\n  const [totalStakeUsdc, setTotalStakeUsdc] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityMining) return\n\n    liquidityMining.totalStakeUsdc().then(usdc => {\n      setTotalStakeUsdc(usdc)\n    }).catch(console.error)\n\n    const addUsdc = (_, usdc) => {\n      setTotalStakeUsdc(_usdc => _usdc.add(usdc))\n    }\n\n    const removeUsdc = (_, usdc) => {\n      setTotalStakeUsdc(_usdc => _usdc.sub(usdc))\n    }\n\n    liquidityMining.on('Stake', addUsdc)\n    liquidityMining.on('Withdraw', removeUsdc)\n\n    return () => {\n      liquidityMining.removeListener('Stake', addUsdc)\n      liquidityMining.removeListener('Withdraw', removeUsdc)\n    }\n  }, [liquidityMining])\n\n  return totalStakeUsdc\n}\n\nconst useTotalStakeUsdt = (liquidityMining) => {\n  const [totalStakeUsdt, setTotalStakeUsdt] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityMining) return\n\n    liquidityMining.totalStakeUsdt().then(usdt => {\n      setTotalStakeUsdt(usdt)\n    }).catch(console.error)\n\n    const addUsdt = (_, __, usdt) => {\n      setTotalStakeUsdt(_usdt => _usdt.add(usdt))\n    }\n\n    const removeUsdt = (_, __, usdt) => {\n      setTotalStakeUsdt(_usdt => _usdt.sub(usdt))\n    }\n\n    liquidityMining.on('Stake', addUsdt)\n    liquidityMining.on('Withdraw', removeUsdt)\n\n    return () => {\n      liquidityMining.removeListener('Stake', addUsdt)\n      liquidityMining.removeListener('Withdraw', removeUsdt)\n    }\n  }, [liquidityMining])\n\n  return totalStakeUsdt\n}\n\nconst useTotalStakeDai = (liquidityMining) => {\n  const [totalStakeDai, setTotalStakeDai] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityMining) return\n\n    liquidityMining.totalStakeDai().then(dai => {\n      setTotalStakeDai(dai)\n    }).catch(console.error)\n\n    const addDai = (_, __, ___, dai) => {\n      setTotalStakeDai(_dai => _dai.add(dai))\n    }\n\n    const removeDai = (_, __, ___, dai) => {\n      setTotalStakeDai(_dai => _dai.sub(dai))\n    }\n\n    liquidityMining.on('Stake', addDai)\n    liquidityMining.on('Withdraw', removeDai)\n\n    return () => {\n      liquidityMining.removeListener('Stake', addDai)\n      liquidityMining.removeListener('Withdraw', removeDai)\n    }\n  }, [liquidityMining])\n\n  return totalStakeDai\n}\n\nexport {\n  useTotalStakeUsdc,\n  useTotalStakeUsdt,\n  useTotalStakeDai,\n}\n","import { useState, useEffect } from 'react'\nimport { BigNumber } from 'ethers'\nimport { useWeb3 } from '../web3'\n\nconst useCurrentBlock = () => {\n  const [currentBlock, setCurrentBlock] = useState(0)\n  const { provider } = useWeb3()\n\n  useEffect(() => {\n    if (!provider) return\n\n    provider.getBlockNumber().then(blockNumber => {\n      setCurrentBlock(blockNumber)\n    }).catch(console.error)\n\n    const getBlockNumber = blockNumber => {\n      setCurrentBlock(blockNumber)\n    }\n\n    provider.on('block', getBlockNumber)\n\n    return () => {\n      provider.removeListener('block', getBlockNumber)\n    }\n  }, [provider])\n\n  return currentBlock\n}\n\nconst useCurrentTime = (blockNumber) => {\n  const [currentTime, setCurrentTime] = useState(BigNumber.from(Math.floor(Date.now() / 1000)))\n  const { provider } = useWeb3()\n\n  useEffect(() => {\n    if (!provider) return\n\n    provider.getBlock(blockNumber).then(block => {\n      if (blockNumber > 0) {\n        setCurrentTime(BigNumber.from(block.timestamp))\n      }\n    }).catch(console.error)\n\n    const timer = setInterval(() => {\n      setCurrentTime(currentTime => currentTime.add(BigNumber.from(1)))\n    }, 1000)\n\n    return () => {\n      clearInterval(timer)\n    }\n  }, [provider, blockNumber])\n\n  return currentTime\n}\n\nconst useStartTime = (liquidityMining) => {\n  const [startTime, setStartTime] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityMining) return\n\n    liquidityMining.startTime().then(startTime => {\n      setStartTime(startTime)\n    }).catch(console.error)\n\n    const updateStartTime = (_, startTime) => {\n      setStartTime(startTime)\n    }\n\n    liquidityMining.on('Deposit', updateStartTime)\n\n    return () => {\n      liquidityMining.removeListener('Deposit', updateStartTime)\n    }\n\n  }, [liquidityMining])\n\n  return startTime\n}\n\nconst useFirstStakeTime = (liquidityMining) => {\n  const [firstStakeTime, setFirstStakeTime] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityMining) return\n\n    const updateFirstStake = () => {\n      liquidityMining.firstStakeTime().then(firstStakeTime => {\n        setFirstStakeTime(firstStakeTime)\n      }).catch(console.error)\n    }\n\n    updateFirstStake()\n\n    liquidityMining.on('Stake', updateFirstStake)\n\n    return () => {\n      liquidityMining.removeListener('Stake', updateFirstStake)\n    }\n\n  }, [liquidityMining])\n\n  return firstStakeTime\n}\n\nconst useEndTime = (liquidityMining) => {\n  const [endTime, setEndTime] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityMining) return\n\n    liquidityMining.endTime().then(endTime => {\n      setEndTime(endTime)\n    }).catch(console.error)\n\n    const updateEndTime = (_, __, _endTime) => {\n      setEndTime(_endTime)\n    }\n\n    liquidityMining.on('Deposit', updateEndTime)\n\n    return () => {\n      liquidityMining.removeListener('Deposit', updateEndTime)\n    }\n  }, [liquidityMining])\n\n  return endTime\n}\n\nconst useElapsedTime = (currentTime, firstStakeTime, endTime) => {\n  const [elapsedTime, setElapsedTime] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (firstStakeTime.eq(0)) {\n      setElapsedTime(BigNumber.from(0))\n      return\n    }\n\n    if (endTime.lt(currentTime)) {\n      setElapsedTime(endTime.sub(firstStakeTime))\n      return\n    }\n\n    setElapsedTime(currentTime.sub(firstStakeTime))\n  }, [currentTime, firstStakeTime, endTime])\n\n  return elapsedTime\n}\n\nconst useRemainingTime = (firstStakeTime, elapsedTime, endTime) => {\n  const [remainingTime, setRemainingTime] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (firstStakeTime.eq(0)) {\n      setRemainingTime(BigNumber.from(0))\n      return\n    }\n\n    setRemainingTime(endTime.sub(firstStakeTime.add(elapsedTime)))\n  }, [firstStakeTime, elapsedTime, endTime])\n\n  return remainingTime\n}\n\nconst useTimeUntilKickoff = (currentTime, startTime) => {\n  const [timeUntilKickoff, setTimeUntilKickoff] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (currentTime.gt(startTime)) {\n      setTimeUntilKickoff(BigNumber.from(0))\n      return\n    }\n\n    setTimeUntilKickoff(startTime.sub(currentTime))\n  }, [currentTime, startTime])\n\n  return timeUntilKickoff\n}\n\nexport {\n  useCurrentBlock,\n  useCurrentTime,\n  useStartTime,\n  useFirstStakeTime,\n  useEndTime,\n  useElapsedTime,\n  useRemainingTime,\n  useTimeUntilKickoff,\n}\n","import { useState, useEffect } from 'react'\nimport { BigNumber } from 'ethers'\nimport { useWeb3 } from '../web3'\n\nconst useMyStakeUsdc = (liquidityMining) => {\n  const [myStakeUsdc, setMyStakeUsdc] = useState(BigNumber.from(0))\n  const { account } = useWeb3()\n\n  useEffect(() => {\n    if (!liquidityMining || !account) return\n\n    liquidityMining.userStakeUsdc(account).then(usdc => {\n      setMyStakeUsdc(usdc)\n    }).catch(console.error)\n\n    const addUsdc = (_, usdc) => {\n      setMyStakeUsdc(_usdc => _usdc.add(usdc))\n    }\n\n    const removeUsdc = (_, usdc) => {\n      setMyStakeUsdc(_usdc => _usdc.sub(usdc))\n    }\n\n    const myStakeFilter = liquidityMining.filters.Stake(account, null, null, null)\n    liquidityMining.on(myStakeFilter, addUsdc)\n\n    const myWithdrawFilter = liquidityMining.filters.Withdraw(account, null, null, null, null)\n    liquidityMining.on(myWithdrawFilter, removeUsdc)\n\n    return () => {\n      liquidityMining.removeListener(myStakeFilter, addUsdc)\n      liquidityMining.removeListener(myWithdrawFilter, removeUsdc)\n    }\n  }, [liquidityMining, account])\n\n  return myStakeUsdc\n}\n\nconst useMyStakeUsdt = (liquidityMining) => {\n  const [myStakeUsdt, setMyStakeUsdt] = useState(BigNumber.from(0))\n  const { account } = useWeb3()\n\n  useEffect(() => {\n    if (!liquidityMining || !account) return\n\n    liquidityMining.userStakeUsdt(account).then(usdt => {\n      setMyStakeUsdt(usdt)\n    }).catch(console.error)\n\n    const addUsdt = (_, __, usdt) => {\n      setMyStakeUsdt(_usdt => _usdt.add(usdt))\n    }\n\n    const removeUsdt = (_, __, usdt) => {\n      setMyStakeUsdt(_usdt => _usdt.sub(usdt))\n    }\n\n    const myStakeFilter = liquidityMining.filters.Stake(account, null, null, null)\n    liquidityMining.on(myStakeFilter, addUsdt)\n\n    const myWithdrawFilter = liquidityMining.filters.Withdraw(account, null, null, null, null)\n    liquidityMining.on(myWithdrawFilter, removeUsdt)\n\n    return () => {\n      liquidityMining.removeListener(myStakeFilter, addUsdt)\n      liquidityMining.removeListener(myWithdrawFilter, removeUsdt)\n    }\n  }, [liquidityMining, account])\n\n  return myStakeUsdt\n}\n\nconst useMyStakeDai = (liquidityMining) => {\n  const [myStakeDai, setMyStakeDai] = useState(BigNumber.from(0))\n  const { account } = useWeb3()\n\n  useEffect(() => {\n    if (!liquidityMining || !account) return\n\n    liquidityMining.userStakeDai(account).then(dai => {\n      setMyStakeDai(dai)\n    }).catch(console.error)\n\n    const addDai = (_, __, ___, dai) => {\n      setMyStakeDai(_dai => _dai.add(dai))\n    }\n\n    const removeDai = (_, __, ___, dai) => {\n      setMyStakeDai(_dai => _dai.sub(dai))\n    }\n\n    const myStakeFilter = liquidityMining.filters.Stake(account, null, null, null)\n    liquidityMining.on(myStakeFilter, addDai)\n\n    const myWithdrawFilter = liquidityMining.filters.Withdraw(account, null, null, null, null)\n    liquidityMining.on(myWithdrawFilter, removeDai)\n\n    return () => {\n      liquidityMining.removeListener(myStakeFilter, addDai)\n      liquidityMining.removeListener(myWithdrawFilter, removeDai)\n    }\n  }, [liquidityMining, account])\n\n  return myStakeDai\n}\n\nexport {\n  useMyStakeUsdc,\n  useMyStakeUsdt,\n  useMyStakeDai\n}\n","import { useState, useEffect } from 'react'\nimport { BigNumber } from 'ethers'\nimport { useWeb3 } from '../web3'\n\nconst useMyPendingRewards = (liquidityMining, currentBlock, currentTime, rewardIncrement, isActive) => {\n  const [pendingRewards, setPendingRewards] = useState(BigNumber.from(0))\n  const { account } = useWeb3()\n\n  useEffect(() => {\n    if (isActive) {\n      setPendingRewards(pendingRewards => pendingRewards.add(rewardIncrement))\n    }\n  }, [currentTime, rewardIncrement, isActive])\n\n  useEffect(() => {\n    if (!liquidityMining || !account) return\n\n    liquidityMining.totalUserStake(account).then(stake => {\n      if (stake.gt(0)) {\n        liquidityMining.callStatic.payout(account).then(reward => {\n          setPendingRewards(reward)\n        }).catch(console.error)\n      } else {\n        setPendingRewards(BigNumber.from(0))\n      }\n    }).catch(console.error)\n    \n  }, [liquidityMining, currentBlock, account])\n\n  return pendingRewards\n}\n\nconst useMyClaimedRewards = (liquidityMining) => {\n  const [claimedRewards, setClaimedRewards] = useState(BigNumber.from(0))\n  const { account } = useWeb3()\n\n  useEffect(() => {\n    if (!liquidityMining || !account) return\n\n    liquidityMining.userClaimedRewards(account).then(reward => {\n      setClaimedRewards(reward)\n    }).catch(console.error)\n\n    const addMyClaimedRewards = (_, reward) => {\n      setClaimedRewards(rewards => rewards.add(reward))\n    }\n\n    const myClaimedRewardsFilter = liquidityMining.filters.Payout(account, null, null)\n    liquidityMining.on(myClaimedRewardsFilter, addMyClaimedRewards)\n\n    return () => {\n      liquidityMining.removeListener(myClaimedRewardsFilter, addMyClaimedRewards)\n    }\n  }, [liquidityMining, account])\n\n  return claimedRewards\n}\n\nconst useMyRewardsPerTime = (liquidityMining, currentBlock, rewardPerTime, isActive) => {\n  const [rewardIncrement, setRewardIncrement] = useState(BigNumber.from(0))\n  const { account } = useWeb3()\n\n  useEffect(() => {\n    if (!liquidityMining || !account) return\n\n    if (!isActive) {\n      setRewardIncrement(BigNumber.from(0))\n      return\n    }\n\n    Promise.all([liquidityMining.totalStake(), liquidityMining.totalUserStake(account)])\n      .then(([total, user]) => {\n        if (total.eq(0)) {\n          setRewardIncrement(BigNumber.from(0))\n        } else {\n          setRewardIncrement(rewardPerTime.mul(user).div(total))\n        }\n      }).catch(console.error)\n  }, [liquidityMining, account, currentBlock, rewardPerTime, isActive])\n\n  return rewardIncrement\n}\n\nexport {\n  useMyPendingRewards,\n  useMyClaimedRewards,\n  useMyRewardsPerTime,\n}\n","import { useState, useEffect } from 'react'\nimport { BigNumber } from 'ethers'\nimport { useWeb3 } from '../web3'\n\nconst useMyUsdcBalance = (usdcContract, currentBlock) => {\n  const { account } = useWeb3()\n  const [balance, setBalance] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!account || !usdcContract) return\n\n    usdcContract.balanceOf(account).then(balance => {\n      setBalance(balance)\n    }).catch(console.error)\n  }, [account, usdcContract, currentBlock])\n\n  return balance\n}\n\nconst useMyUsdtBalance = (usdtContract, currentBlock) => {\n  const { account } = useWeb3()\n  const [balance, setBalance] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!account || !usdtContract) return\n\n    usdtContract.balanceOf(account).then(balance => {\n      setBalance(balance)\n    }).catch(console.error)\n  }, [account, usdtContract, currentBlock])\n\n  return balance\n}\n\nconst useMyDaiBalance = (daiContract, currentBlock) => {\n  const { account } = useWeb3()\n  const [balance, setBalance] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!account || !daiContract) return\n\n    daiContract.balanceOf(account).then(balance => {\n      setBalance(balance)\n    }).catch(console.error)\n  }, [account, daiContract, currentBlock])\n\n  return balance\n}\n\nconst useMyUsdcAllowance = (liquidityMining, usdcContract, currentBlock) => {\n  const { account } = useWeb3()\n  const [allowance, setAllowance] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!account || !liquidityMining || !usdcContract) return\n\n    usdcContract.allowance(account, liquidityMining.address).then(allowance => {\n      setAllowance(allowance)\n    }).catch(console.error)\n  }, [account, liquidityMining, usdcContract, currentBlock])\n\n  return allowance\n}\n\nconst useMyUsdtAllowance = (liquidityMining, usdtContract, currentBlock) => {\n  const { account } = useWeb3()\n  const [allowance, setAllowance] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!account || !liquidityMining || !usdtContract) return\n\n    usdtContract.allowance(account, liquidityMining.address).then(allowance => {\n      setAllowance(allowance)\n    }).catch(console.error)\n  }, [account, liquidityMining, usdtContract, currentBlock])\n\n  return allowance\n}\n\nconst useMyDaiAllowance = (liquidityMining, daiContract, currentBlock) => {\n  const { account } = useWeb3()\n  const [allowance, setAllowance] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!account || !liquidityMining || !daiContract) return\n\n    daiContract.allowance(account, liquidityMining.address).then(allowance => {\n      setAllowance(allowance)\n    }).catch(console.error)\n  }, [account, liquidityMining, daiContract, currentBlock])\n\n  return allowance\n}\n\nexport {\n  useMyUsdcBalance,\n  useMyUsdtBalance,\n  useMyDaiBalance,\n  useMyUsdcAllowance,\n  useMyUsdtAllowance,\n  useMyDaiAllowance,\n}\n","import { useState, useEffect } from 'react'\nimport { useWeb3 } from '../web3'\n\nconst useCanStake = (systemState, StateEnum) => {\n  const { account } = useWeb3()\n  const [canStake, setCanStake] = useState(false)\n\n  useEffect(() => {\n    setCanStake(account && [StateEnum.Ready, StateEnum.Active].includes(systemState))\n  }, [account, systemState, StateEnum])\n\n  return canStake\n}\n\nconst useCanPayout = (pendingRewards) => {\n  const { account } = useWeb3()\n  const [canPayout, setCanPayout] = useState(false)\n\n  useEffect(() => {\n    setCanPayout(account && pendingRewards.gt(0))\n  }, [account, pendingRewards])\n\n  return canPayout\n}\n\nconst useCanWithdraw = (usdc, usdt, dai) => {\n  const { account } = useWeb3()\n  const [canWithdraw, setCanWithdraw] = useState(false)\n\n  useEffect(() => {\n    setCanWithdraw(account && (usdc.gt(0) || usdt.gt(0) || dai.gt(0)))\n  }, [account, usdc, usdt, dai])\n\n  return canWithdraw\n}\n\nexport {\n  useCanStake,\n  useCanPayout,\n  useCanWithdraw,\n}\n","export default __webpack_public_path__ + \"static/media/logo.46d0239c.png\";","export default __webpack_public_path__ + \"static/media/wallet.7d4fae45.svg\";","import { useState, useEffect } from 'react'\nimport { useData } from '../dataContext'\nimport { useWeb3 } from '../web3'\nimport logo from '../assets/images/logo.png'\nimport wallet from '../assets/images/wallet.svg'\nimport { connect } from '../web3/useProvider'\n\nconst AccountDisplay = () => {\n  const truncate = (fullStr, strLen, separator) => {\n    if (fullStr.length <= strLen) return fullStr;\n\n    separator = separator || '...';\n\n    const sepLen = separator.length\n    const charsToShow = strLen - sepLen\n    const frontChars = Math.ceil(charsToShow / 2 + 1) // accounts for the \"0x\"\n    const backChars = Math.floor(charsToShow / 2 - 1) // accounts for the \"0x\"\n\n    return fullStr.substr(0, frontChars) + separator + fullStr.substr(fullStr.length - backChars);\n  }\n\n  const { account } = useWeb3()\n\n  if (account) {\n    return (\n      <div>\n        {truncate(account, 25)}\n      </div>\n    )\n  } else {\n    return (\n      <button className=\"underline\" onClick={() => connect()}>\n        Connect Web3 Account\n      </button>\n    )\n  }\n}\n\nconst Top = () => {\n  return (\n    <div className=\"flex justify-between mb-16\">\n      <div className=\"w-24 p-1\">\n        <img src={logo} alt=\"logo\" />\n      </div>\n      <div className=\"flex items-center\">\n        <div>\n          <img src={wallet} alt=\"wallet\" />\n        </div>\n        <div className=\"ml-3 text-gray-400 text-sm\">\n          <AccountDisplay />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst Title = () => {\n  const { systemState, StateEnum, liquidityMining } = useData()\n\n  const [liquidityMiningState, setLiquidityMiningState] = useState(\"Not Scheduled\")\n  const [badgeColor, setBadgeColor] = useState(\"bg-red\")\n\n  useEffect(() => {\n    if (systemState === StateEnum.NotScheduled) {\n      setLiquidityMiningState(\"Not Scheduled\")\n      setBadgeColor(\"bg-red\")\n    } else if (systemState === StateEnum.Scheduled) {\n      setLiquidityMiningState(\"Scheduled\")\n      setBadgeColor(\"bg-yellow\")\n    } else if (systemState === StateEnum.Ready) {\n      setLiquidityMiningState(\"Ready\")\n      setBadgeColor(\"bg-green\")\n    } else if (systemState === StateEnum.Active) {\n      setLiquidityMiningState(\"Active\")\n      setBadgeColor(\"bg-green\")\n    } else if (systemState === StateEnum.Over) {\n      setLiquidityMiningState(\"Over\")\n      setBadgeColor(\"bg-red\")\n    } else {\n      setLiquidityMiningState(\"Not Scheduled\")\n      setBadgeColor(\"bg-red\")\n    }\n  }, [systemState, StateEnum])\n\n  return (\n    <div className=\"flex flex-col items-center\">\n      <div className=\"flex justify-center items-center\">\n        <h1 className=\"text-xl\">\n          Liquidity Mining\n        </h1>\n        <div className={`ml-3 py-1 px-2 ${badgeColor} text-gray-900 text-xs rounded`}>\n          {liquidityMiningState}\n        </div>\n      </div>\n      <div className=\"mt-2 text-gray-400 text-sm underline\">\n        <a target=\"_blank\" rel=\"noreferrer\" href={`https://etherscan.io/address/${liquidityMining?.address}`}>View on Etherscan</a>\n      </div>\n    </div>\n  )\n}\n\nconst Header = () => {\n  return (\n    <div className=\"pt-2 pb-6\">\n      <Top />\n      <Title />\n    </div>\n  )\n}\n\nexport default Header\n","export default __webpack_public_path__ + \"static/media/question.6cbe55dd.svg\";","import Tippy from '@tippyjs/react'\nimport question from '../../assets/images/question.svg'\n\nconst Tooltip = ({ children }) => {\n  return (\n  <Tippy content={children} className=\"border-2 border-white rounded text-center text-xs font-normal p-2 bg-gray-900\">\n    <img src={question} alt=\"tooltip\" />\n  </Tippy>\n  )\n}\n\nexport default Tooltip\n","import Tooltip from './Tooltip'\n\nconst ValueItem = ({ children, value, bigValue = false, bold = false, icon, tooltipText }) => {\n  return (\n    <div className=\"mx-4 mb-6 text-sm w-64 md:whitespace-nowrap\">\n      <div className={`${bold ? \"text-white font-bold\" : \"text-gray-400 font-normal\"} mb-2`}>\n        {tooltipText\n          ? <div className=\"flex justify-center items-center\">\n              <div className=\"mr-2\">{children}</div>\n              <Tooltip>{tooltipText}</Tooltip>\n            </div>\n          : children}\n      </div>\n      <div className={`${bigValue ? \"text-lg\" : \"text-sm\"} ${bold ? \"font-bold\" : \"font-normal\"}`}>\n        {icon\n          ? <div className=\"flex justify-center items-center\">\n              <div className=\"mr-2\">\n                <img src={icon} alt=\"icon\" />\n              </div>\n              <div>{value}</div>\n            </div>\n          : value\n        }\n      </div>\n    </div>\n  )\n}\n\nconst Row = ({ children, value, total }) => {\n  return (\n    <div className=\"flex mb-1 items-center\">\n      <div className=\"w-1/2 text-right text-gray-400\">\n        {children}\n      </div>\n      <div className={`w-1/2 ml-2 text-right truncate ${total ? \"font-bold\": \"\"}`}>\n        {value}\n      </div>\n    </div>\n  )\n}\n\nexport { ValueItem, Row }\n","import { useData } from '../dataContext'\nimport { ValueItem } from './shared/Value'\n\nconst Container = ({ children }) => {\n  return (\n    <div className=\"flex flex-wrap justify-center text-center border-b border-t pt-6 mb-6 border-gray-500\">\n      {children}\n    </div>\n  )\n}\n\nconst currentTimeTooltip = \"\\\"Current Time\\\" comes from the timestamp of the most recent Ethereum block. That's why it slightly jumps around, and probably doesn't directly match your system clock.\"\n\nconst NotScheduled = () => {\n  const { currentTime } = useData()\n\n  return (\n    <Container>\n      <ValueItem value={currentTime} tooltipText={currentTimeTooltip}>Current Time</ValueItem>\n    </Container>\n  )\n}\n\nconst Scheduled = () => {\n  const { currentTime, startTime, timeUntilKickoff } = useData()\n\n  return (\n    <Container>\n      <ValueItem value={currentTime} tooltipText={currentTimeTooltip}>Current Time</ValueItem>\n      <ValueItem value={startTime}>Start Time</ValueItem>\n      <ValueItem value={timeUntilKickoff}>Time Until Kickoff</ValueItem>\n    </Container>\n  )\n}\n\nconst Ready = () => {\n  const { currentTime, rewardsPerTime } = useData()\n\n  return (\n    <Container>\n      <ValueItem value={currentTime} tooltipText={currentTimeTooltip}>Current Time</ValueItem>\n      <ValueItem value={rewardsPerTime}>SARCO Per Second</ValueItem>\n    </Container>\n  )\n}\n\nconst Active = () => {\n  const { currentTime, firstStakeTime, endTime, remainingTime, rewardsPerTime } = useData()\n\n  return (\n    <Container>\n      <ValueItem value={firstStakeTime}>Start Time</ValueItem>\n      <ValueItem value={currentTime} tooltipText={currentTimeTooltip}>Current Time</ValueItem>\n      <ValueItem value={endTime}>End Time</ValueItem>\n      <ValueItem value={remainingTime}>Remaining Time</ValueItem>\n      <ValueItem value={rewardsPerTime}>SARCO Per Second</ValueItem>\n    </Container>\n  )\n}\n\nconst Over = () => {\n  const { currentTime, firstStakeTime, endTime, rewardsPerTime } = useData()\n\n  return (\n    <Container>\n      <ValueItem value={firstStakeTime}>Start Time</ValueItem>\n      <ValueItem value={endTime}>End Time</ValueItem>\n      <ValueItem value={currentTime} tooltipText={currentTimeTooltip}>Current Time</ValueItem>\n      <ValueItem value={rewardsPerTime}>SARCO Per Second</ValueItem>\n    </Container>\n  )\n}\n\nconst Blocks = () => {\n  const { systemState, StateEnum } = useData()\n\n  if (systemState === StateEnum.NotScheduled) {\n    return <NotScheduled />\n  } else if (systemState === StateEnum.Scheduled) {\n    return <Scheduled />\n  } else if (systemState === StateEnum.Ready) {\n    return <Ready />\n  } else if (systemState === StateEnum.Active) {\n    return <Active />\n  } else if (systemState === StateEnum.Over) {\n    return <Over />\n  } else {\n    return <></>\n  }\n}\n\nexport default Blocks\n","export default __webpack_public_path__ + \"static/media/usdc-small.7f23db62.svg\";","export default __webpack_public_path__ + \"static/media/usdt-small.230eb725.svg\";","export default __webpack_public_path__ + \"static/media/dai-small.102cb29e.svg\";","import { useData } from '../dataContext'\nimport { ValueItem } from './shared/Value'\nimport usdc from '../assets/images/usdc-small.svg'\nimport usdt from '../assets/images/usdt-small.svg'\nimport dai from '../assets/images/dai-small.svg'\n\nconst Container = ({ children }) => {\n  return (\n    <div className=\"flex flex-col text-center\">\n      {children}\n    </div>\n  )\n}\n\nconst SectionContainer = ({ children, topBorder = false }) => {\n  return (\n    <div className={`flex flex-col sm:flex-row flex-wrap justify-center items-center ${topBorder ? \"pt-6 sm:pt-0 border-t border-gray-500 sm:border-none\" : \"border-none\"}`}>\n      {children}\n    </div>\n  )\n}\n\nconst GlobalStats = () => {\n  const {\n    totalEmittedRewards,\n    totalUnemittedRewards,\n    totalClaimedRewards,\n    totalUnclaimedRewards,\n    totalRewards,\n    totalStakeUsdc,\n    totalStakeUsdt,\n    totalStakeDai,\n    totalStakeStablecoins,\n  } = useData()\n\n  return (\n    <Container>\n      <SectionContainer>\n        <ValueItem bigValue value={totalEmittedRewards}>Emitted SARCO</ValueItem>\n        <ValueItem bigValue value={totalUnemittedRewards}>Unemitted SARCO</ValueItem>\n        <ValueItem bigValue bold value={totalRewards}\n          tooltipText=\"&quot;Total SARCO&quot; is the sum of Emitted SARCO and Unemitted SARCO, which shows the total number of SARCO that liquidity mining will produce\"\n        >Total SARCO</ValueItem>\n      </SectionContainer>\n      <SectionContainer topBorder>\n        <ValueItem bigValue value={totalClaimedRewards}\n          tooltipText=\"&quot;Total Claimed SARCO&quot; is the sum of all SARCO which have been claimed (via transactions to own wallets) from liquidity mining, by all participants\"\n        >Total Claimed SARCO</ValueItem>\n        <ValueItem bigValue value={totalUnclaimedRewards}\n          tooltipText=\"&quot;Total Unclaimed SARCO&quot; is calculated as as &quot;Emitted SARCO&quot; minus &quot;Total Claimed SARCO&quot;\"\n        >Total Unclaimed SARCO</ValueItem>\n      </SectionContainer>\n      <SectionContainer topBorder>\n        <ValueItem bigValue icon={usdc} value={totalStakeUsdc}>Total Locked USDC</ValueItem>\n        <ValueItem bigValue icon={usdt} value={totalStakeUsdt}>Total Locked USDT</ValueItem>\n        <ValueItem bigValue icon={dai} value={totalStakeDai}>Total Locked DAI</ValueItem>\n        <ValueItem bigValue bold value={totalStakeStablecoins}\n          tooltipText=\"&quot;Total Locked Stablecoins&quot; refers to the sum of all stablecoins that have been locked by everyone participating in liquidity mining\"\n        >Total Locked Stablecoins</ValueItem>\n      </SectionContainer>\n    </Container>\n  )\n}\n\nexport default GlobalStats\n","import { useState, useCallback } from 'react'\nimport { toast } from 'react-toastify'\n\nconst useTransaction = () => {\n  const [pending, setPending] = useState(false)\n\n  const contractCall = useCallback(\n    (contractFn, parameters, pendingMessage, failedMessage, successMessage, successCallback, completedCallback) => {\n      setPending(true)\n      let toastId\n      contractFn(...parameters)\n        .then(txResponse => {\n          toastId = toast.info(pendingMessage, {\n            autoClose: false,\n            closeOnClick: false,\n            draggable: false\n          })\n          return Promise.all([txResponse.wait(), toastId])\n        })\n        .then(([txReceipt, toastId]) => {\n          setPending(false)\n          toast.dismiss(toastId)\n          if (txReceipt.status === 0) {\n            toast.error(failedMessage)\n          } else if (txReceipt.status === 1) {\n            toast.success(successMessage)\n            if (successCallback) successCallback()\n          } else {\n            toast.error(\"Not sure what happened with that transaction\")\n          }\n          if (completedCallback) completedCallback()\n        })\n        .catch(error => {\n          console.error(error)\n          setPending(false)\n          toast.dismiss(toastId)\n          toast.error(\"There was an error! Check your browser's console logs for more details.\")\n        })\n    }, [])\n\n  return { contractCall, pending }\n}\n\nexport { useTransaction }","const Button = ({ children, icon, disabled, className = \"\", ...rest }) => {\n  return (\n    <button {...rest} disabled={disabled} className={`border-2 border-white p-2 min-w-full ${disabled ? \"opacity-50 cursor-not-allowed\" : \"\"} ${className}`}>\n      <div className=\"flex justify-center text-sm items-center\">\n        <div>\n          {children}\n        </div>\n        {icon && <div className=\"ml-3\">\n          <img src={icon} alt=\"icon\" />\n        </div>}\n      </div>\n    </button>\n  )\n}\n\nexport { Button }\n","export default __webpack_public_path__ + \"static/media/usdc.cad2e94f.svg\";","export default __webpack_public_path__ + \"static/media/usdt.9f777612.svg\";","export default __webpack_public_path__ + \"static/media/dai.a8d8a983.svg\";","export default __webpack_public_path__ + \"static/media/lock.0df973d1.svg\";","import { useState, useEffect, useCallback } from 'react'\nimport { BigNumber, utils } from 'ethers'\nimport numeral from 'numeral'\nimport { useData } from '../dataContext'\nimport { useTransaction } from '../dataContext/transactions'\nimport { useWeb3 } from '../web3'\nimport { Button } from './shared/Button'\nimport usdcIcon from '../assets/images/usdc.svg'\nimport usdtIcon from '../assets/images/usdt.svg'\nimport daiIcon from '../assets/images/dai.svg'\nimport lock from '../assets/images/lock.svg'\n\nconst StakeForm = () => {\n  const { account } = useWeb3()\n  const {\n    liquidityMining,\n    usdcContract,\n    usdtContract,\n    daiContract,\n    myUsdcBalance,\n    myUsdtBalance,\n    myDaiBalance,\n    myUsdcAllowance,\n    myUsdtAllowance,\n    myDaiAllowance,\n    decimalsUsdc,\n    decimalsUsdt,\n    decimalsDai,\n    canStake,\n  } = useData()\n\n  const [usdc, setUsdc] = useState(0)\n  const [usdt, setUsdt] = useState(0)\n  const [dai, setDai] = useState(0)\n\n  const [usdcBig, setUsdcBig] = useState(BigNumber.from(0))\n  const [usdtBig, setUsdtBig] = useState(BigNumber.from(0))\n  const [daiBig, setDaiBig] = useState(BigNumber.from(0))\n\n  const [buttonText, setButtonText] = useState(\"Stake\")\n  const { contractCall, pending } = useTransaction()\n  const [callData, setCallData] = useState([])\n\n  const [buttonEnabled, setButtonEnabled] = useState(false)\n\n  useEffect(() => {\n    setButtonEnabled(!pending && (usdcBig.gt(0) || usdtBig.gt(0) || daiBig.gt(0)))\n  }, [pending, usdcBig, usdtBig, daiBig])\n\n  useEffect(() => {\n    setUsdc(0)\n    setUsdt(0)\n    setDai(0)\n  }, [account])\n\n  useEffect(() => {\n    setUsdcBig(utils.parseUnits((usdc || 0).toFixed(decimalsUsdc), decimalsUsdc))\n  }, [usdc, decimalsUsdc])\n\n  useEffect(() => {\n    setUsdtBig(utils.parseUnits((usdt || 0).toFixed(decimalsUsdt), decimalsUsdt))\n  }, [usdt, decimalsUsdt])\n\n  useEffect(() => {\n    setDaiBig(utils.parseUnits((dai || 0).toFixed(decimalsDai), decimalsDai))\n  }, [dai, decimalsDai])\n\n  useEffect(() => {\n    if (myUsdcAllowance.lt(usdcBig)) {\n      setButtonText(\"Approve USDC\")\n      if (!usdcContract) return\n      setCallData([\n        usdcContract.approve,\n        [liquidityMining?.address, BigNumber.from(2).pow(BigNumber.from(256)).sub(BigNumber.from(1))],\n        \"Approving USDC...\", \"USDC approval failed!\", \"USDC approval made!\"\n      ])\n    } else if (myUsdtAllowance.lt(usdtBig)) {\n      setButtonText(\"Approve USDT\")\n      if (!usdtContract) return\n      setCallData([\n        usdtContract.approve,\n        [liquidityMining?.address, BigNumber.from(2).pow(BigNumber.from(256)).sub(BigNumber.from(1))],\n        \"Approving USDT...\", \"USDT approval failed!\", \"USDT approval made!\"\n      ])\n    } else if (myDaiAllowance.lt(daiBig)) {\n      setButtonText(\"Approve DAI\")\n      if (!daiContract) return\n      setCallData([\n        daiContract.approve,\n        [liquidityMining?.address, BigNumber.from(2).pow(BigNumber.from(256)).sub(BigNumber.from(1))],\n        \"Approving DAI...\", \"DAI approval failed!\", \"DAI approval made!\"\n      ])\n    } else {\n      setButtonText(\"Lock my Stablecoins\")\n      if (!liquidityMining) return\n      setCallData([\n        liquidityMining.stake,\n        [usdcBig, usdtBig, daiBig, { }],\n        \"Locking coins...\", \"Lock failed!\", \"Lock made!\",\n        () => {\n          setUsdc(0)\n          setUsdt(0)\n          setDai(0)\n        }\n      ])\n    }\n  }, [usdc, usdt, dai, usdcBig, usdtBig, daiBig, myUsdcAllowance, myUsdtAllowance, myDaiAllowance, liquidityMining, usdcContract, usdtContract, daiContract])\n\n  const calls = e => {\n    e.preventDefault()\n    contractCall(...callData)\n  }\n\n  const Input = useCallback(({ currency, value, setValue, balance, decimals, icon }) => {\n    const calculateValue = setValue => {\n      return e => {\n        let normalizedValue = \"\"\n        const inputValue = e.target.value\n        if (inputValue) normalizedValue = Math.min(inputValue, numeral(balance).value())\n        setValue(normalizedValue)\n      }\n    }\n\n    const makeStep = decimals => {\n      return `0.${Array(decimals).fill(0).join('')}`.slice(0, -1) + '1'\n    }\n\n    const inputDisable = !(canStake && numeral(balance).value() > 0)\n\n    return (\n      <div className=\"flex mb-4 text-sm\">\n        <div className=\"mr-4 flex flex-col items-center w-10\">\n          <div className=\"uppercase mb-2\">{currency}</div>\n          <div>\n            <img src={icon} alt=\"icon\" />\n          </div>\n        </div>\n        <div className=\"w-full\">\n          <div className=\"flex justify-between mb-2 text-gray-400\">\n            <div className=\"mr-2\">Amount*</div>\n            <div>Balance: {balance}</div>\n          </div>\n          <input type=\"number\" step={makeStep(decimals)} disabled={inputDisable} required name={currency} id={currency} value={value} onChange={calculateValue(setValue)} min=\"0\" max={balance} className={`w-full border-2 border-gray-500 ${inputDisable ? 'text-gray-400' : 'text-white'} bg-gray-900`} placeholder={balance} />\n        </div>\n      </div>\n    )\n  }, [canStake])\n\n  return (\n    <div>\n      <form onSubmit={calls}>\n        <div className=\"flex flex-col w-full\">\n          <Input currency=\"usdc\" value={usdc} setValue={setUsdc} balance={myUsdcBalance} decimals={decimalsUsdc} icon={usdcIcon} />\n          <Input currency=\"usdt\" value={usdt} setValue={setUsdt} balance={myUsdtBalance} decimals={decimalsUsdt} icon={usdtIcon} />\n          <Input currency=\"dai\" value={dai} setValue={setDai} balance={myDaiBalance} decimals={6} icon={daiIcon} />\n        </div>\n        <div className=\"mx-6\">\n          <div className=\"mb-4 text-center text-gray-400 text-2xs\">\n            <span>Please see the</span>\n            <a className=\"mx-2 text-white underline\" href=\"https://sarcophagus.gitbook.io/sarcophagus-documentation/stablecoin-liquidity-mining-1/stablecoin-liquidity-mining\" target=\"_blank\" rel=\"noopener noreferrer\">documentation</a>\n            <span>for more info</span>\n          </div>\n          <Button type=\"submit\" disabled={!buttonEnabled} icon={lock}>\n            {buttonText}\n          </Button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default StakeForm\n","import { useData } from '../dataContext'\nimport { Row } from './shared/Value'\nimport { useState, useEffect } from 'react'\nimport { useTransaction } from '../dataContext/transactions'\nimport { useWeb3 } from '../web3'\nimport { Button } from './shared/Button'\n\nconst Claim = () => {\n  const {\n    myRewardsPerTime,\n    myPendingRewards,\n    myClaimedRewards,\n    myTotalRewards,\n  } = useData()\n\n  const { account } = useWeb3()\n  const { liquidityMining, canPayout } = useData()\n\n  const { contractCall, pending } = useTransaction()\n  const [payoutEnabled, setPayoutEnabled] = useState(false)\n\n  useEffect(() => {\n    setPayoutEnabled(!pending && canPayout)\n  }, [pending, canPayout])\n\n  const payout = () => {\n    contractCall(\n      liquidityMining.payout, [account, { }],\n      \"Paying out rewards...\", \"Payout failed!\", \"Payout successful!\"\n    )\n  }\n\n  return (\n    <div>\n      <div className=\"mx-4 mb-4\">\n        <div className=\"mb-3\">\n          <Row value={myRewardsPerTime}>SARCO / second</Row>\n        </div>\n        <Row value={myPendingRewards}>SARCO Pending</Row>\n        <Row value={myClaimedRewards}>SARCO Claimed</Row>\n        <Row value={myTotalRewards} total>SARCO Total</Row>\n      </div>\n      <Button disabled={!payoutEnabled} onClick={payout}>\n        Claim my SARCO\n      </Button>\n    </div>\n  )\n}\n\nexport default Claim\n","export default __webpack_public_path__ + \"static/media/unlock.c85dfc87.svg\";","import { useState, useEffect } from 'react'\nimport { useData } from '../dataContext'\nimport { Row } from './shared/Value'\nimport { Button } from './shared/Button'\nimport { useWeb3 } from '../web3'\nimport { useTransaction } from '../dataContext/transactions'\nimport unlock from '../assets/images/unlock.svg'\n\nconst Unlock = () => {\n  const { account } = useWeb3()\n  const {\n    myStakeUsdc,\n    myStakeUsdt,\n    myStakeDai,\n    myStakedStablecoins,\n    liquidityMining,\n    canPayout,\n    canWithdraw,\n  } = useData()\n\n  const { contractCall, pending } = useTransaction()\n\n  const [withdrawEnabled, setWithdrawEnabled] = useState(false)\n\n  useEffect(() => {\n    setWithdrawEnabled(!pending && canWithdraw)\n  }, [pending, canPayout, canWithdraw])\n\n  const withdraw = () => {\n    contractCall(\n      liquidityMining.withdraw, [account, { }],\n      \"Unlocking stablecoins...\", \"Unlock failed!\", \"Unlock successful!\"\n    )\n  }\n\n  return (\n    <div>\n      <div className=\"mx-4 mb-4\">\n        <Row value={myStakeUsdc}>USDC Locked</Row>\n        <Row value={myStakeUsdt}>USDT Locked</Row>\n        <Row value={myStakeDai}>DAI Locked</Row>\n        <Row value={myStakedStablecoins} total>Total Locked</Row>\n      </div>\n      <Button disabled={!withdrawEnabled} onClick={withdraw} icon={unlock}>\n        Unlock my Stablecoins\n      </Button>\n    </div>\n  )\n}\n\nexport default Unlock\n","import Blocks from './Blocks'\nimport GlobalStats from './GlobalStats'\nimport StakeForm from './StakeForm'\nimport Claim from './Claim'\nimport Unlock from './Unlock'\n\nconst Body = () => {\n  return (\n    <div>\n      <Blocks />\n      <GlobalStats />\n      <div className=\"border-2 border-gray-500 mb-6 py-6 px-4 flex justify-center whitespace-nowrap\">\n        <div className=\"max-w-2xl flex flex-col sm:flex-row sm:items-end\">\n          <div className=\"sm:w-1/2 mb-12 sm:mb-8 sm:mr-2\">\n            <StakeForm />\n          </div>\n          <div className=\"sm:w-1/2 text-sm mb-8\">\n            <div className=\"mx-6\">\n              <div className=\"mb-12\">\n                <Claim />\n              </div>\n              <Unlock />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Body\n","import { useWeb3 } from '../web3'\nimport packageJson from '../../package.json'\n\nconst Footer = () => {\n  const { name } = useWeb3()\n\n  return (\n    <div className=\"text-gray-400 text-xs my-4\">\n      <div className=\"flex justify-between pb-6\">\n        <div>v{packageJson.version + '+' + process.env.REACT_APP_GIT_HASH}</div>\n        <div>{name}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Footer\n","import Header from './components/Header'\nimport Body from './components/Body'\nimport Footer from './components/Footer'\n\nconst App = () => {\n  return (\n    <div className=\"container min-h-screen flex flex-col justify-between\">\n      <div>\n        <Header />\n        <Body />\n      </div>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ToastContainer } from 'react-toastify'\nimport './index.css'\nimport App from './App'\nimport { Web3Provider } from './web3'\nimport { DataProvider } from './dataContext'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Web3Provider>\n      <DataProvider>\n        <App />\n        <ToastContainer closeButton={false} />\n      </DataProvider>\n    </Web3Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}