{"version":3,"sources":["web3/index.js","dataContext/index.js","web3/chains.js","web3/userSupplied.js","web3/local.js","web3/fallback.js","dataContext/contracts.js","dataContext/totalRewards.js","dataContext/totalStakes.js","dataContext/blocks.js","dataContext/myStakes.js","dataContext/myRewards.js","dataContext/myBalances.js","dataContext/abilities.js","assets/images/logo.png","assets/images/wallet.svg","components/Header.js","assets/images/question.svg","components/shared/Tooltip.js","components/shared/Value.js","components/Blocks.js","assets/images/usdc-small.svg","assets/images/usdt-small.svg","assets/images/dai-small.svg","components/GlobalStats.js","dataContext/transactions.js","components/shared/Button.js","assets/images/usdc.svg","assets/images/usdt.svg","assets/images/dai.svg","assets/images/lock.svg","components/StakeForm.js","components/Claim.js","assets/images/unlock.svg","components/Unlock.js","components/Body.js","components/FAQ.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["context","supportedChains","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","web3Modal","Web3Modal","Web3Provider","createContext","displayName","Provider","children","userSupplied","useState","provider","setProvider","setUserSupplied","useEffect","detectEthereumProvider","then","injectedProvider","window","ethereum","selectedAddress","ethers","providers","on","accounts","length","chainId","includes","parseInt","toast","info","toastId","useUserSuppliedConnect","local","previousProvider","setLocal","useLocalConnect","fallback","getDefaultProvider","process","alchemy","etherscan","infura","defaultProvider","useFallbackConnect","defaultName","name","account","signerOrProvider","web3","setWeb3","getSigner","detectNetwork","network","catch","console","error","value","createWeb3Root","useWeb3","useContext","useLiquidityMiningContract","addresses","setAddresses","liquidityMining","useAddresses","liquidityMiningContract","setLiquidityMiningContract","Contract","LiquidityMining","abi","useDecimals","contract","decimals","setDecimals","DataProvider","makeDecimals","Array","fill","join","makeNumeral","bigNumber","numeral","utils","formatUnits","moneyString","money","format","counterString","seconds","Number","d","Math","floor","h","m","s","dDisplay","hDisplay","mDisplay","sDisplay","replace","dateString","Date","toLocaleString","getDecimalNumber","StateEnum","Object","freeze","NotScheduled","Scheduled","Ready","Active","Over","usdcContract","setUsdcContract","usdc","ERC20","useUsdcContract","usdtContract","setUsdtContract","usdt","useUsdtContract","daiContract","setDaiContract","dai","useDaiContract","sarcoContract","setSarcoContract","sarco","useSarcoContract","decimalsUsdc","decimalsUsdt","decimalsDai","decimalsSarco","totalRewards","BigNumber","from","totalSarcoRewards","setTotalSarcoRewards","updateTotalRewards","removeListener","useTotalRewards","totalClaimedRewards","totalClaimedSarcoRewards","setTotalClaimedSarcoRewards","getClaimedRewards","_","_sarco","add","useTotalClaimedRewards","totalStakeUsdc","setTotalStakeUsdc","addUsdc","_usdc","removeUsdc","sub","useTotalStakeUsdc","totalStakeUsdt","setTotalStakeUsdt","addUsdt","__","_usdt","removeUsdt","useTotalStakeUsdt","totalStakeDai","setTotalStakeDai","addDai","___","_dai","removeDai","useTotalStakeDai","currentBlock","setCurrentBlock","getBlockNumber","blockNumber","useCurrentBlock","currentTime","now","setCurrentTime","getBlock","block","timestamp","timer","setInterval","clearInterval","useCurrentTime","startTime","setStartTime","updateStartTime","useStartTime","firstStakeTime","setFirstStakeTime","updateFirstStake","useFirstStakeTime","endTime","setEndTime","updateEndTime","_endTime","useEndTime","rewardsPerTime","setRewardsPerTime","eq","div","useRewardsPerTime","timeUntilKickoff","setTimeUntilKickoff","gt","useTimeUntilKickoff","elapsedTime","setElapsedTime","lt","useElapsedTime","remainingTime","setRemainingTime","useRemainingTime","totalEmittedRewards","mul","totalUnemittedRewards","totalUnclaimedRewards","myStakeUsdc","setMyStakeUsdc","userStakeUsdc","myStakeFilter","filters","Stake","myWithdrawFilter","Withdraw","useMyStakeUsdc","myStakeUsdt","setMyStakeUsdt","userStakeUsdt","useMyStakeUsdt","myStakeDai","setMyStakeDai","userStakeDai","useMyStakeDai","isActive","myRewardsPerTime","rewardPerTime","rewardIncrement","setRewardIncrement","Promise","all","totalStake","totalUserStake","total","user","useMyRewardsPerTime","myPendingRewards","pendingRewards","setPendingRewards","stake","callStatic","payout","reward","useMyPendingRewards","myClaimedRewards","claimedRewards","setClaimedRewards","userClaimedRewards","addMyClaimedRewards","rewards","myClaimedRewardsFilter","Payout","useMyClaimedRewards","myTotalRewards","myUsdcBalance","balance","setBalance","balanceOf","useMyUsdcBalance","myUsdtBalance","useMyUsdtBalance","myDaiBalance","useMyDaiBalance","myUsdcAllowance","allowance","setAllowance","address","useMyUsdcAllowance","myUsdtAllowance","useMyUsdtAllowance","myDaiAllowance","useMyDaiAllowance","systemState","state","setState","useSystemState","canStake","setCanStake","useCanStake","canPayout","setCanPayout","useCanPayout","canWithdraw","setCanWithdraw","useCanWithdraw","dataContext","totalStakeStablecoins","myStakedStablecoins","createDataRoot","useData","AccountDisplay","fullStr","strLen","separator","charsToShow","frontChars","ceil","backChars","substr","truncate","className","onClick","connect","Top","src","logo","alt","wallet","Title","liquidityMiningState","setLiquidityMiningState","badgeColor","setBadgeColor","target","rel","href","Header","Tooltip","content","question","ValueItem","bigValue","bold","icon","tooltipText","Row","Container","currentTimeTooltip","Blocks","SectionContainer","topBorder","GlobalStats","useTransaction","pending","setPending","contractCall","useCallback","contractFn","parameters","pendingMessage","failedMessage","successMessage","successCallback","completedCallback","txResponse","autoClose","closeOnClick","draggable","wait","txReceipt","dismiss","status","success","Button","disabled","rest","StakeForm","setUsdc","setUsdt","setDai","usdcBig","setUsdcBig","usdtBig","setUsdtBig","daiBig","setDaiBig","buttonText","setButtonText","callData","setCallData","buttonEnabled","setButtonEnabled","parseUnits","toFixed","approve","pow","Input","currency","setValue","inputDisable","type","step","slice","makeStep","required","id","onChange","e","normalizedValue","inputValue","min","calculateValue","max","placeholder","onSubmit","preventDefault","usdcIcon","usdtIcon","daiIcon","lock","Claim","payoutEnabled","setPayoutEnabled","Unlock","withdrawEnabled","setWithdrawEnabled","withdraw","unlock","Body","Question","Answer","FAQ","Footer","packageJson","version","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","closeButton","document","getElementById"],"mappings":"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","file":"static/js/main.3afadb60.chunk.js","sourcesContent":["import { useEffect, useState, createContext, useContext } from 'react'\nimport { useFallbackConnect } from './fallback'\nimport { useLocalConnect } from './local'\nimport { useUserSuppliedConnect } from './userSupplied'\nimport { supportedChains } from './chains'\n\nlet context\n\nconst createWeb3Root = () => {\n  context = createContext()\n\n  context.displayName = 'Web3 Provider'\n  const Provider = context.Provider\n\n  return ({ children }) => {\n    const userSupplied = useUserSuppliedConnect()\n    const local = useLocalConnect(!!userSupplied)\n    const fallback = useFallbackConnect(!!local)\n\n    const defaultName = 'Not connected'\n\n    const [web3, setWeb3] = useState({\n      name: defaultName,\n      account: false,\n      chainId: null,\n      provider: null,\n      signerOrProvider: null,\n    })\n\n    useEffect(() => {\n      if (userSupplied?.provider && userSupplied.provider.selectedAddress && supportedChains().includes(parseInt(userSupplied.provider.chainId))) {\n        setWeb3({\n          name: 'Injected provider',\n          account: userSupplied.provider.selectedAddress,\n          chainId: parseInt(userSupplied.provider.chainId),\n          provider: userSupplied,\n          signerOrProvider: userSupplied.getSigner(),\n        })\n      } else if (local) {\n        local.detectNetwork().then(network => {\n          setWeb3({\n            name: 'Local provider',\n            account: false,\n            chainId: network.chainId,\n            provider: local,\n            signerOrProvider: local,\n          })\n        }).catch(console.error)\n      } else if (fallback) {\n        setWeb3({\n          name: 'Fallback provider',\n          account: false,\n          chainId: fallback.network.chainId,\n          provider: fallback,\n          signerOrProvider: fallback,\n        })\n      } else {\n        setWeb3({\n          name: defaultName,\n          account: false,\n          chainId: null,\n          provider: null,\n          signerOrProvider: null\n        })\n      }\n    }, [userSupplied, local, fallback])\n\n    return <Provider value={web3}>{children}</Provider>\n  }\n}\n\nconst Web3Provider = createWeb3Root()\n\nconst useWeb3 = () => {\n  return useContext(context)\n}\n\nexport { Web3Provider, useWeb3 }\n","import { createContext, useContext, useState, useEffect } from 'react'\nimport { utils } from 'ethers'\nimport numeral from 'numeral'\nimport {\n  useLiquidityMiningContract,\n  useUsdcContract,\n  useUsdtContract,\n  useDaiContract,\n  useSarcoContract,\n  useDecimals\n} from './contracts'\nimport {\n  useTotalStakeUsdc,\n  useTotalStakeUsdt,\n  useTotalStakeDai,\n} from './totalStakes'\nimport {\n  useTotalRewards,\n  useTotalClaimedRewards,\n  useRewardsPerTime,\n} from './totalRewards'\nimport {\n  useCurrentBlock,\n  useCurrentTime,\n  useStartTime,\n  useFirstStakeTime,\n  useEndTime,\n  useElapsedTime,\n  useRemainingTime,\n  useTimeUntilKickoff,\n} from './blocks'\nimport {\n  useMyStakeUsdc,\n  useMyStakeUsdt,\n  useMyStakeDai,\n} from './myStakes'\nimport {\n  useMyPendingRewards,\n  useMyClaimedRewards,\n  useMyRewardsPerTime,\n} from './myRewards'\nimport {\n  useMyUsdcBalance,\n  useMyUsdtBalance,\n  useMyDaiBalance,\n  useMyUsdcAllowance,\n  useMyUsdtAllowance,\n  useMyDaiAllowance,\n} from './myBalances'\nimport {\n  useCanStake,\n  useCanPayout,\n  useCanWithdraw,\n} from './abilities'\n\nlet context\n\nconst createDataRoot = () => {\n  context = createContext()\n\n  context.displayName = 'Data Provider'\n  const Provider = context.Provider\n\n  const makeDecimals = decimals => {\n    return `0,0.[${Array(decimals).fill(0).join(\"\")}]`\n  }\n\n  const makeNumeral = (bigNumber, decimals) => {\n    return numeral(utils.formatUnits(bigNumber, decimals))\n  }\n\n  const moneyString = (bigNumber, decimals) => {\n    const money = makeNumeral(bigNumber, decimals).format(makeDecimals(decimals))\n    if (money === \"NaN\") return \"0\"\n    return money\n  }\n\n  const counterString = seconds => {\n    seconds = Number(seconds)\n    var d = Math.floor(seconds / (3600 * 24))\n    var h = Math.floor(seconds % (3600 * 24) / 3600)\n    var m = Math.floor(seconds % 3600 / 60)\n    var s = Math.floor(seconds % 60)\n\n    var dDisplay = d > 0 ? d + (d === 1 ? \" day, \" : \" days, \") : \"\"\n    var hDisplay = h > 0 ? h + (h === 1 ? \" hour, \" : \" hours, \") : \"\"\n    var mDisplay = m > 0 ? m + (m === 1 ? \" minute, \" : \" minutes, \") : \"\"\n    var sDisplay = s > 0 ? s + (s === 1 ? \" second\" : \" seconds\") : \"\"\n\n    if (!dDisplay && !hDisplay && !mDisplay && !sDisplay) sDisplay = \"0 seconds\"\n\n    return (dDisplay + hDisplay + mDisplay + sDisplay).replace(/,\\s*$/, \"\")\n  }\n\n  const dateString = seconds => {\n    return new Date(seconds * 1000).toLocaleString()\n  }\n\n  const getDecimalNumber = (bigNumber, decimals) => {\n    return makeNumeral(bigNumber, decimals).value()\n  }\n\n  const StateEnum = Object.freeze({\n    NotScheduled: 1,\n    Scheduled: 2,\n    Ready: 3,\n    Active: 4,\n    Over: 5,\n  })\n\n  const useSystemState = (startTime, timeUntilKickoff, firstStakeTime, remainingTime) => {\n    const [state, setState] = useState(StateEnum.NotScheduled)\n\n    useEffect(() => {\n      if (startTime.eq(0)) {\n        setState(StateEnum.NotScheduled)\n      } else if (timeUntilKickoff.gt(0)) {\n        setState(StateEnum.Scheduled)\n      } else if (firstStakeTime.eq(0)) {\n        setState(StateEnum.Ready)\n      } else if (remainingTime.gt(0)) {\n        setState(StateEnum.Active)\n      } else {\n        setState(StateEnum.Over)\n      }\n    }, [startTime, timeUntilKickoff, firstStakeTime, remainingTime])\n\n    return state\n  }\n\n  return ({ children }) => {\n    const liquidityMining = useLiquidityMiningContract()\n\n    const usdcContract = useUsdcContract(liquidityMining)\n    const usdtContract = useUsdtContract(liquidityMining)\n    const daiContract = useDaiContract(liquidityMining)\n    const sarcoContract = useSarcoContract(liquidityMining)\n\n    const decimalsUsdc = useDecimals(usdcContract)\n    const decimalsUsdt = useDecimals(usdtContract)\n    const decimalsDai = useDecimals(daiContract)\n    const decimalsSarco = useDecimals(sarcoContract)\n\n    const totalRewards = useTotalRewards(liquidityMining)\n    const totalClaimedRewards = useTotalClaimedRewards(liquidityMining)\n\n    const totalStakeUsdc = useTotalStakeUsdc(liquidityMining)\n    const totalStakeUsdt = useTotalStakeUsdt(liquidityMining)\n    const totalStakeDai = useTotalStakeDai(liquidityMining)\n\n    const currentBlock = useCurrentBlock()\n    const currentTime = useCurrentTime(currentBlock)\n    const startTime = useStartTime(liquidityMining)\n    const firstStakeTime = useFirstStakeTime(liquidityMining)\n    const endTime = useEndTime(liquidityMining)\n    const rewardsPerTime = useRewardsPerTime(totalRewards, startTime, firstStakeTime, endTime)\n\n    const timeUntilKickoff = useTimeUntilKickoff(currentTime, startTime)\n\n    const elapsedTime = useElapsedTime(currentTime, firstStakeTime, endTime)\n    const remainingTime = useRemainingTime(firstStakeTime, elapsedTime, endTime)\n    const totalEmittedRewards = elapsedTime.mul(rewardsPerTime)\n    const totalUnemittedRewards = remainingTime.mul(rewardsPerTime)\n    const totalUnclaimedRewards = totalEmittedRewards.sub(totalClaimedRewards)\n\n    const myStakeUsdc = useMyStakeUsdc(liquidityMining)\n    const myStakeUsdt = useMyStakeUsdt(liquidityMining)\n    const myStakeDai = useMyStakeDai(liquidityMining)\n\n    const isActive = startTime.gt(0) && timeUntilKickoff.eq(0) && firstStakeTime.gt(0) && remainingTime.gt(0) && (myStakeUsdc.add(myStakeUsdt).add(myStakeDai).gt(0))\n    const myRewardsPerTime = useMyRewardsPerTime(liquidityMining, currentBlock, rewardsPerTime, isActive)\n    const myPendingRewards = useMyPendingRewards(liquidityMining, currentBlock, currentTime, myRewardsPerTime, isActive)\n    const myClaimedRewards = useMyClaimedRewards(liquidityMining)\n\n    const myTotalRewards = myPendingRewards.add(myClaimedRewards)\n\n    const myUsdcBalance = useMyUsdcBalance(usdcContract, currentBlock)\n    const myUsdtBalance = useMyUsdtBalance(usdtContract, currentBlock)\n    const myDaiBalance = useMyDaiBalance(daiContract, currentBlock)\n\n    const myUsdcAllowance = useMyUsdcAllowance(liquidityMining, usdcContract, currentBlock)\n    const myUsdtAllowance = useMyUsdtAllowance(liquidityMining, usdtContract, currentBlock)\n    const myDaiAllowance = useMyDaiAllowance(liquidityMining, daiContract, currentBlock)\n\n    const systemState = useSystemState(startTime, timeUntilKickoff, firstStakeTime, remainingTime)\n\n    const canStake = useCanStake(systemState, StateEnum)\n    const canPayout = useCanPayout(myPendingRewards)\n    const canWithdraw = useCanWithdraw(myStakeUsdc, myStakeUsdt, myStakeDai)\n\n    const dataContext = {\n      liquidityMining, usdcContract, usdtContract, daiContract, sarcoContract,\n      decimalsUsdc, decimalsUsdt, decimalsDai,\n\n      totalRewards: moneyString(totalRewards, decimalsSarco),\n      totalClaimedRewards: moneyString(totalClaimedRewards, decimalsSarco),\n      rewardsPerTime: moneyString(rewardsPerTime, decimalsSarco),\n      totalEmittedRewards: moneyString(totalEmittedRewards, decimalsSarco),\n      totalUnemittedRewards: moneyString(totalUnemittedRewards, decimalsSarco),\n      totalUnclaimedRewards: moneyString(totalUnclaimedRewards, decimalsSarco),\n\n      totalStakeUsdc: moneyString(totalStakeUsdc, decimalsUsdc),\n      totalStakeUsdt: moneyString(totalStakeUsdt, decimalsUsdt),\n      totalStakeDai: moneyString(totalStakeDai, decimalsDai),\n      totalStakeStablecoins: numeral(\n        getDecimalNumber(totalStakeUsdc, decimalsUsdc) +\n        getDecimalNumber(totalStakeUsdt, decimalsUsdt) +\n        getDecimalNumber(totalStakeDai, decimalsDai)\n      ).format(makeDecimals(decimalsDai)),\n\n      currentTime: dateString(currentTime),\n      startTime: dateString(startTime),\n      firstStakeTime: dateString(firstStakeTime),\n      endTime: dateString(endTime),\n      timeUntilKickoff: counterString(timeUntilKickoff),\n      remainingTime: counterString(remainingTime),\n\n      myStakeUsdc: moneyString(myStakeUsdc, decimalsUsdc),\n      myStakeUsdt: moneyString(myStakeUsdt, decimalsUsdt),\n      myStakeDai: moneyString(myStakeDai, decimalsDai),\n      myStakedStablecoins: numeral(\n        getDecimalNumber(myStakeUsdc, decimalsUsdc) +\n        getDecimalNumber(myStakeUsdt, decimalsUsdt) +\n        getDecimalNumber(myStakeDai, decimalsDai)\n      ).format(makeDecimals(decimalsDai)),\n\n      myPendingRewards: moneyString(myPendingRewards, decimalsSarco),\n      myClaimedRewards: moneyString(myClaimedRewards, decimalsSarco),\n      myTotalRewards: moneyString(myTotalRewards, decimalsSarco),\n      myRewardsPerTime: moneyString(myRewardsPerTime, decimalsSarco),\n\n      myUsdcBalance: moneyString(myUsdcBalance, decimalsUsdc),\n      myUsdtBalance: moneyString(myUsdtBalance, decimalsUsdt),\n      myDaiBalance: moneyString(myDaiBalance, decimalsDai),\n\n      myUsdcAllowance,\n      myUsdtAllowance,\n      myDaiAllowance,\n\n      canStake,\n      canPayout,\n      canWithdraw,\n\n      systemState, StateEnum\n    }\n\n    return <Provider value={dataContext}>{children}</Provider>\n  }\n}\n\nconst DataProvider = createDataRoot()\n\nconst useData = () => {\n  return useContext(context)\n}\n\nexport { DataProvider, useData }","import { useState, useEffect } from 'react'\n\nconst supportedChains = () => {\n  const dev = process.env.NODE_ENV !== 'production' ? [parseInt(process.env.REACT_APP_LOCAL_CHAINID, 10)] : []\n  return [...dev, 1]\n}\n\nconst useAddresses = chainId => {\n  const [addresses, setAddresses] = useState()\n\n  useEffect(() => {\n    if (chainId === parseInt(process.env.REACT_APP_LOCAL_CHAINID, 10)) {\n      setAddresses({\n        liquidityMining: process.env.REACT_APP_LOCAL_LIQUIDITY_MINING_ADDRESS\n      })\n    } else if (chainId === 1) {\n      setAddresses({\n        liquidityMining: process.env.REACT_APP_LIQUIDITY_MINING_ADDRESS\n      })\n    }\n  }, [chainId])\n\n  return addresses\n}\n\nexport {\n  supportedChains,\n  useAddresses\n}","import { useState, useEffect } from 'react'\nimport { ethers } from 'ethers'\nimport { toast } from 'react-toastify'\nimport Web3Modal from 'web3modal'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport { supportedChains } from './chains'\nimport detectEthereumProvider from '@metamask/detect-provider'\n\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider,\n    options: {\n      infuraId: \"27e484dcd9e3efcfd25a83a78777cdf1\",\n    },\n  },\n}\n\nconst web3Modal = new Web3Modal({ providerOptions })\n\nconst useUserSuppliedConnect = () => {\n  const [provider, setProvider] = useState(null)\n  const [userSupplied, setUserSupplied] = useState(null)\n  \n  // Allows auto connection to injected provider\n\n  useEffect(() => {\n    detectEthereumProvider().then(injectedProvider => {\n      if(injectedProvider && window.ethereum?.selectedAddress) {\n        setProvider(injectedProvider)\n        setUserSupplied(new ethers.providers.Web3Provider(injectedProvider))\n      }\n    })\n  }, [])\n\n  web3Modal.on('connect', provider => {\n    setProvider(provider)\n    setUserSupplied(new ethers.providers.Web3Provider(provider))\n  })\n\n  useEffect(() => {\n    if (provider) {\n      provider.on('accountsChanged', accounts => {\n        if (accounts.length === 0) {\n          setProvider(null)\n          setUserSupplied(null)\n        }  \n      })\n      provider.on('chainChanged', chainId => {\n        if (!supportedChains().includes(parseInt(chainId))) {\n          toast.info('Switch to a supported network', {\n            toastId: 'switchNetwork'\n          })\n          setProvider(null)\n          setUserSupplied(null)\n        }  \n      })\n    }\n  }, [provider])\n\n  return userSupplied\n}\n\nconst connect = () => {\n  web3Modal.connect().catch(console.error)\n}\n\nexport { useUserSuppliedConnect, connect }","import { useState, useEffect } from 'react'\nimport { ethers } from 'ethers'\n\nconst useLocalConnect = (previousProvider) => {\n  const [local, setLocal] = useState(null)\n\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'production' || previousProvider) {\n      setLocal(null)\n      return\n    }\n\n    if (local) {\n      return\n    }\n\n    const provider = new ethers.providers.JsonRpcProvider(process.env.REACT_APP_LOCAL_PROVIDER_URL)\n    provider.detectNetwork()\n      .then(() => setLocal(provider))\n      .catch(() => setLocal(null))\n  }, [local, previousProvider])\n\n  return local\n}\n\nexport { useLocalConnect }\n","import { useState, useEffect } from 'react'\nimport { getDefaultProvider } from 'ethers'\n\nconst useFallbackConnect = (previousProvider) => {\n  const [provider, setProvider] = useState(null)\n  const [defaultProvider] = useState(getDefaultProvider(parseInt(process.env.REACT_APP_DEFAULT_CHAIN_ID, 10), {\n    alchemy: 'bjrgvDbGZBUJ_iZFFd1vIqUWzgrwKWeg',\n    etherscan: 'G61W8715WK65NCMJPFXU8EBQ5VDTT4KCVJ',\n    infura: '800746c8737e4f34bb772ade4532ab83',\n  }))\n\n  useEffect(() => {\n    if (previousProvider) {\n      setProvider(null)\n      return\n    }\n\n    if (provider) {\n      return\n    }\n\n    setProvider(defaultProvider)\n  }, [provider, previousProvider, defaultProvider])\n\n  return provider\n}\n\nexport { useFallbackConnect }\n","import { useState, useEffect } from 'react'\nimport { Contract } from 'ethers'\nimport { useWeb3 } from '../web3'\nimport { useAddresses } from '../web3/chains'\nimport LiquidityMining from '../../build-contracts/LiquidityMining2.json'\nimport ERC20 from '../../build-contracts/ERC20.json'\n\nconst useLiquidityMiningContract = () => {\n  const { chainId, signerOrProvider } = useWeb3()\n  const addresses = useAddresses(chainId)\n  const [liquidityMiningContract, setLiquidityMiningContract] = useState()\n\n  useEffect(() => {\n    if (!chainId || !addresses || !signerOrProvider) return\n\n    setLiquidityMiningContract(new Contract(addresses.liquidityMining, LiquidityMining.abi, signerOrProvider))\n  }, [chainId, signerOrProvider, addresses])\n\n  return liquidityMiningContract\n}\n\nconst useUsdcContract = (liquidityMining) => {\n  const { signerOrProvider } = useWeb3()\n  const [usdcContract, setUsdcContract] = useState()\n\n  useEffect(() => {\n    if (!liquidityMining || !signerOrProvider) return\n\n    liquidityMining.usdc().then(usdc => {\n      setUsdcContract(new Contract(usdc, ERC20.abi, signerOrProvider))\n    }).catch(console.error)\n  }, [liquidityMining, signerOrProvider])\n\n  return usdcContract\n}\n\nconst useUsdtContract = (liquidityMining) => {\n  const { signerOrProvider } = useWeb3()\n  const [usdtContract, setUsdtContract] = useState()\n\n  useEffect(() => {\n    if (!liquidityMining || !signerOrProvider) return\n\n    liquidityMining.usdt().then(usdt => {\n      setUsdtContract(new Contract(usdt, ERC20.abi, signerOrProvider))\n    }).catch(console.error)\n  }, [liquidityMining, signerOrProvider])\n\n  return usdtContract\n}\n\nconst useDaiContract = (liquidityMining) => {\n  const { signerOrProvider } = useWeb3()\n  const [daiContract, setDaiContract] = useState()\n\n  useEffect(() => {\n    if (!liquidityMining || !signerOrProvider) return\n\n    liquidityMining.dai().then(dai => {\n      setDaiContract(new Contract(dai, ERC20.abi, signerOrProvider))\n    }).catch(console.error)\n  }, [liquidityMining, signerOrProvider])\n\n  return daiContract\n}\n\nconst useSarcoContract = (liquidityMining) => {\n  const { signerOrProvider } = useWeb3()\n  const [sarcoContract, setSarcoContract] = useState()\n\n  useEffect(() => {\n    if (!liquidityMining || !signerOrProvider) return\n\n    liquidityMining.sarco().then(sarco => {\n      setSarcoContract(new Contract(sarco, ERC20.abi, signerOrProvider))\n    }).catch(console.error)\n  }, [liquidityMining, signerOrProvider])\n\n  return sarcoContract\n}\n\nconst useDecimals = (contract) => {\n  const [decimals, setDecimals] = useState(0)\n\n  useEffect(() => {\n    if (!contract) return\n\n    contract.decimals().then(decimals => {\n      setDecimals(decimals)\n    }).catch(console.error)\n  }, [contract])\n\n  return decimals\n}\n\nexport {\n  useLiquidityMiningContract,\n  useUsdcContract,\n  useUsdtContract,\n  useDaiContract,\n  useSarcoContract,\n  useDecimals\n}","import { useState, useEffect } from 'react'\nimport { BigNumber } from 'ethers'\n\nconst useTotalRewards = (liquidityMining) => {\n  const [totalSarcoRewards, setTotalSarcoRewards] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityMining) return\n\n    liquidityMining.totalRewards().then(sarco => {\n      setTotalSarcoRewards(sarco)\n    }).catch(console.error)\n\n    const updateTotalRewards = (totalRewards) => {\n      setTotalSarcoRewards(totalRewards)\n    }\n\n    liquidityMining.on('Deposit', updateTotalRewards)\n\n    return () => {\n      liquidityMining.removeListener('Deposit', updateTotalRewards)\n    }\n\n  }, [liquidityMining])\n\n  return totalSarcoRewards\n}\n\nconst useTotalClaimedRewards = (liquidityMining) => {\n  const [totalClaimedSarcoRewards, setTotalClaimedSarcoRewards] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityMining) return\n\n    liquidityMining.totalClaimedRewards().then(sarco => {\n        setTotalClaimedSarcoRewards(sarco)\n      }).catch(console.error)\n\n    const getClaimedRewards = (_, _sarco) => {\n      setTotalClaimedSarcoRewards(sarco => sarco.add(_sarco))\n    }\n\n    liquidityMining.on('Payout', getClaimedRewards)\n\n    return () => {\n      liquidityMining.removeListener('Payout', getClaimedRewards)\n    }\n  }, [liquidityMining])\n\n  return totalClaimedSarcoRewards\n}\n\nconst useRewardsPerTime = (totalRewards, startTime, firstStakeTime, endTime) => {\n  const [rewardsPerTime, setRewardsPerTime] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (startTime.eq(0)) {\n      setRewardsPerTime(BigNumber.from(0))\n      return\n    }\n\n    if (firstStakeTime.eq(0)) {\n      setRewardsPerTime(totalRewards.div(endTime.sub(startTime)))\n      return\n    }\n\n    setRewardsPerTime(totalRewards.div(endTime.sub(firstStakeTime)))\n  }, [totalRewards, startTime, firstStakeTime, endTime])\n\n  return rewardsPerTime\n}\n\nexport {\n  useTotalRewards,\n  useTotalClaimedRewards,\n  useRewardsPerTime,\n}\n","import { useState, useEffect } from 'react'\nimport { BigNumber } from 'ethers'\n\nconst useTotalStakeUsdc = (liquidityMining) => {\n  const [totalStakeUsdc, setTotalStakeUsdc] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityMining) return\n\n    liquidityMining.totalStakeUsdc().then(usdc => {\n      setTotalStakeUsdc(usdc)\n    }).catch(console.error)\n\n    const addUsdc = (_, usdc) => {\n      setTotalStakeUsdc(_usdc => _usdc.add(usdc))\n    }\n\n    const removeUsdc = (_, usdc) => {\n      setTotalStakeUsdc(_usdc => _usdc.sub(usdc))\n    }\n\n    liquidityMining.on('Stake', addUsdc)\n    liquidityMining.on('Withdraw', removeUsdc)\n\n    return () => {\n      liquidityMining.removeListener('Stake', addUsdc)\n      liquidityMining.removeListener('Withdraw', removeUsdc)\n    }\n  }, [liquidityMining])\n\n  return totalStakeUsdc\n}\n\nconst useTotalStakeUsdt = (liquidityMining) => {\n  const [totalStakeUsdt, setTotalStakeUsdt] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityMining) return\n\n    liquidityMining.totalStakeUsdt().then(usdt => {\n      setTotalStakeUsdt(usdt)\n    }).catch(console.error)\n\n    const addUsdt = (_, __, usdt) => {\n      setTotalStakeUsdt(_usdt => _usdt.add(usdt))\n    }\n\n    const removeUsdt = (_, __, usdt) => {\n      setTotalStakeUsdt(_usdt => _usdt.sub(usdt))\n    }\n\n    liquidityMining.on('Stake', addUsdt)\n    liquidityMining.on('Withdraw', removeUsdt)\n\n    return () => {\n      liquidityMining.removeListener('Stake', addUsdt)\n      liquidityMining.removeListener('Withdraw', removeUsdt)\n    }\n  }, [liquidityMining])\n\n  return totalStakeUsdt\n}\n\nconst useTotalStakeDai = (liquidityMining) => {\n  const [totalStakeDai, setTotalStakeDai] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityMining) return\n\n    liquidityMining.totalStakeDai().then(dai => {\n      setTotalStakeDai(dai)\n    }).catch(console.error)\n\n    const addDai = (_, __, ___, dai) => {\n      setTotalStakeDai(_dai => _dai.add(dai))\n    }\n\n    const removeDai = (_, __, ___, dai) => {\n      setTotalStakeDai(_dai => _dai.sub(dai))\n    }\n\n    liquidityMining.on('Stake', addDai)\n    liquidityMining.on('Withdraw', removeDai)\n\n    return () => {\n      liquidityMining.removeListener('Stake', addDai)\n      liquidityMining.removeListener('Withdraw', removeDai)\n    }\n  }, [liquidityMining])\n\n  return totalStakeDai\n}\n\nexport {\n  useTotalStakeUsdc,\n  useTotalStakeUsdt,\n  useTotalStakeDai,\n}\n","import { useState, useEffect } from 'react'\nimport { BigNumber } from 'ethers'\nimport { useWeb3 } from '../web3'\n\nconst useCurrentBlock = () => {\n  const [currentBlock, setCurrentBlock] = useState(0)\n  const { provider } = useWeb3()\n\n  useEffect(() => {\n    if (!provider) return\n\n    provider.getBlockNumber().then(blockNumber => {\n      setCurrentBlock(blockNumber)\n    }).catch(console.error)\n\n    const getBlockNumber = blockNumber => {\n      setCurrentBlock(blockNumber)\n    }\n\n    provider.on('block', getBlockNumber)\n\n    return () => {\n      provider.removeListener('block', getBlockNumber)\n    }\n  }, [provider])\n\n  return currentBlock\n}\n\nconst useCurrentTime = (blockNumber) => {\n  const [currentTime, setCurrentTime] = useState(BigNumber.from(Math.floor(Date.now() / 1000)))\n  const { provider } = useWeb3()\n\n  useEffect(() => {\n    if (!provider) return\n\n    provider.getBlock(blockNumber).then(block => {\n      if (blockNumber > 0) {\n        setCurrentTime(BigNumber.from(block.timestamp))\n      }\n    }).catch(console.error)\n\n    const timer = setInterval(() => {\n      setCurrentTime(currentTime => currentTime.add(BigNumber.from(1)))\n    }, 1000)\n\n    return () => {\n      clearInterval(timer)\n    }\n  }, [provider, blockNumber])\n\n  return currentTime\n}\n\nconst useStartTime = (liquidityMining) => {\n  const [startTime, setStartTime] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityMining) return\n\n    liquidityMining.startTime().then(startTime => {\n      setStartTime(startTime)\n    }).catch(console.error)\n\n    const updateStartTime = (_, startTime) => {\n      setStartTime(startTime)\n    }\n\n    liquidityMining.on('Deposit', updateStartTime)\n\n    return () => {\n      liquidityMining.removeListener('Deposit', updateStartTime)\n    }\n\n  }, [liquidityMining])\n\n  return startTime\n}\n\nconst useFirstStakeTime = (liquidityMining) => {\n  const [firstStakeTime, setFirstStakeTime] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityMining) return\n\n    const updateFirstStake = () => {\n      liquidityMining.firstStakeTime().then(firstStakeTime => {\n        setFirstStakeTime(firstStakeTime)\n      }).catch(console.error)\n    }\n\n    updateFirstStake()\n\n    liquidityMining.on('Stake', updateFirstStake)\n\n    return () => {\n      liquidityMining.removeListener('Stake', updateFirstStake)\n    }\n\n  }, [liquidityMining])\n\n  return firstStakeTime\n}\n\nconst useEndTime = (liquidityMining) => {\n  const [endTime, setEndTime] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityMining) return\n\n    liquidityMining.endTime().then(endTime => {\n      setEndTime(endTime)\n    }).catch(console.error)\n\n    const updateEndTime = (_, __, _endTime) => {\n      setEndTime(_endTime)\n    }\n\n    liquidityMining.on('Deposit', updateEndTime)\n\n    return () => {\n      liquidityMining.removeListener('Deposit', updateEndTime)\n    }\n  }, [liquidityMining])\n\n  return endTime\n}\n\nconst useElapsedTime = (currentTime, firstStakeTime, endTime) => {\n  const [elapsedTime, setElapsedTime] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (firstStakeTime.eq(0)) {\n      setElapsedTime(BigNumber.from(0))\n      return\n    }\n\n    if (endTime.lt(currentTime)) {\n      setElapsedTime(endTime.sub(firstStakeTime))\n      return\n    }\n\n    setElapsedTime(currentTime.sub(firstStakeTime))\n  }, [currentTime, firstStakeTime, endTime])\n\n  return elapsedTime\n}\n\nconst useRemainingTime = (firstStakeTime, elapsedTime, endTime) => {\n  const [remainingTime, setRemainingTime] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (firstStakeTime.eq(0)) {\n      setRemainingTime(BigNumber.from(0))\n      return\n    }\n\n    setRemainingTime(endTime.sub(firstStakeTime.add(elapsedTime)))\n  }, [firstStakeTime, elapsedTime, endTime])\n\n  return remainingTime\n}\n\nconst useTimeUntilKickoff = (currentTime, startTime) => {\n  const [timeUntilKickoff, setTimeUntilKickoff] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (currentTime.gt(startTime)) {\n      setTimeUntilKickoff(BigNumber.from(0))\n      return\n    }\n\n    setTimeUntilKickoff(startTime.sub(currentTime))\n  }, [currentTime, startTime])\n\n  return timeUntilKickoff\n}\n\nexport {\n  useCurrentBlock,\n  useCurrentTime,\n  useStartTime,\n  useFirstStakeTime,\n  useEndTime,\n  useElapsedTime,\n  useRemainingTime,\n  useTimeUntilKickoff,\n}\n","import { useState, useEffect } from 'react'\nimport { BigNumber } from 'ethers'\nimport { useWeb3 } from '../web3'\n\nconst useMyStakeUsdc = (liquidityMining) => {\n  const [myStakeUsdc, setMyStakeUsdc] = useState(BigNumber.from(0))\n  const { account } = useWeb3()\n\n  useEffect(() => {\n    if (!liquidityMining || !account) return\n\n    liquidityMining.userStakeUsdc(account).then(usdc => {\n      setMyStakeUsdc(usdc)\n    }).catch(console.error)\n\n    const addUsdc = (_, usdc) => {\n      setMyStakeUsdc(_usdc => _usdc.add(usdc))\n    }\n\n    const removeUsdc = (_, usdc) => {\n      setMyStakeUsdc(_usdc => _usdc.sub(usdc))\n    }\n\n    const myStakeFilter = liquidityMining.filters.Stake(account, null, null, null)\n    liquidityMining.on(myStakeFilter, addUsdc)\n\n    const myWithdrawFilter = liquidityMining.filters.Withdraw(account, null, null, null, null)\n    liquidityMining.on(myWithdrawFilter, removeUsdc)\n\n    return () => {\n      liquidityMining.removeListener(myStakeFilter, addUsdc)\n      liquidityMining.removeListener(myWithdrawFilter, removeUsdc)\n    }\n  }, [liquidityMining, account])\n\n  return myStakeUsdc\n}\n\nconst useMyStakeUsdt = (liquidityMining) => {\n  const [myStakeUsdt, setMyStakeUsdt] = useState(BigNumber.from(0))\n  const { account } = useWeb3()\n\n  useEffect(() => {\n    if (!liquidityMining || !account) return\n\n    liquidityMining.userStakeUsdt(account).then(usdt => {\n      setMyStakeUsdt(usdt)\n    }).catch(console.error)\n\n    const addUsdt = (_, __, usdt) => {\n      setMyStakeUsdt(_usdt => _usdt.add(usdt))\n    }\n\n    const removeUsdt = (_, __, usdt) => {\n      setMyStakeUsdt(_usdt => _usdt.sub(usdt))\n    }\n\n    const myStakeFilter = liquidityMining.filters.Stake(account, null, null, null)\n    liquidityMining.on(myStakeFilter, addUsdt)\n\n    const myWithdrawFilter = liquidityMining.filters.Withdraw(account, null, null, null, null)\n    liquidityMining.on(myWithdrawFilter, removeUsdt)\n\n    return () => {\n      liquidityMining.removeListener(myStakeFilter, addUsdt)\n      liquidityMining.removeListener(myWithdrawFilter, removeUsdt)\n    }\n  }, [liquidityMining, account])\n\n  return myStakeUsdt\n}\n\nconst useMyStakeDai = (liquidityMining) => {\n  const [myStakeDai, setMyStakeDai] = useState(BigNumber.from(0))\n  const { account } = useWeb3()\n\n  useEffect(() => {\n    if (!liquidityMining || !account) return\n\n    liquidityMining.userStakeDai(account).then(dai => {\n      setMyStakeDai(dai)\n    }).catch(console.error)\n\n    const addDai = (_, __, ___, dai) => {\n      setMyStakeDai(_dai => _dai.add(dai))\n    }\n\n    const removeDai = (_, __, ___, dai) => {\n      setMyStakeDai(_dai => _dai.sub(dai))\n    }\n\n    const myStakeFilter = liquidityMining.filters.Stake(account, null, null, null)\n    liquidityMining.on(myStakeFilter, addDai)\n\n    const myWithdrawFilter = liquidityMining.filters.Withdraw(account, null, null, null, null)\n    liquidityMining.on(myWithdrawFilter, removeDai)\n\n    return () => {\n      liquidityMining.removeListener(myStakeFilter, addDai)\n      liquidityMining.removeListener(myWithdrawFilter, removeDai)\n    }\n  }, [liquidityMining, account])\n\n  return myStakeDai\n}\n\nexport {\n  useMyStakeUsdc,\n  useMyStakeUsdt,\n  useMyStakeDai\n}\n","import { useState, useEffect } from 'react'\nimport { BigNumber } from 'ethers'\nimport { useWeb3 } from '../web3'\n\nconst useMyPendingRewards = (liquidityMining, currentBlock, currentTime, rewardIncrement, isActive) => {\n  const [pendingRewards, setPendingRewards] = useState(BigNumber.from(0))\n  const { account } = useWeb3()\n\n  useEffect(() => {\n    if (isActive) {\n      setPendingRewards(pendingRewards => pendingRewards.add(rewardIncrement))\n    }\n  }, [currentTime, rewardIncrement, isActive])\n\n  useEffect(() => {\n    if (!liquidityMining || !account) return\n\n    liquidityMining.totalUserStake(account).then(stake => {\n      if (stake.gt(0)) {\n        liquidityMining.callStatic.payout(account).then(reward => {\n          setPendingRewards(reward)\n        }).catch(console.error)\n      } else {\n        setPendingRewards(BigNumber.from(0))\n      }\n    }).catch(console.error)\n    \n  }, [liquidityMining, currentBlock, account])\n\n  return pendingRewards\n}\n\nconst useMyClaimedRewards = (liquidityMining) => {\n  const [claimedRewards, setClaimedRewards] = useState(BigNumber.from(0))\n  const { account } = useWeb3()\n\n  useEffect(() => {\n    if (!liquidityMining || !account) return\n\n    liquidityMining.userClaimedRewards(account).then(reward => {\n      setClaimedRewards(reward)\n    }).catch(console.error)\n\n    const addMyClaimedRewards = (_, reward) => {\n      setClaimedRewards(rewards => rewards.add(reward))\n    }\n\n    const myClaimedRewardsFilter = liquidityMining.filters.Payout(account, null, null)\n    liquidityMining.on(myClaimedRewardsFilter, addMyClaimedRewards)\n\n    return () => {\n      liquidityMining.removeListener(myClaimedRewardsFilter, addMyClaimedRewards)\n    }\n  }, [liquidityMining, account])\n\n  return claimedRewards\n}\n\nconst useMyRewardsPerTime = (liquidityMining, currentBlock, rewardPerTime, isActive) => {\n  const [rewardIncrement, setRewardIncrement] = useState(BigNumber.from(0))\n  const { account } = useWeb3()\n\n  useEffect(() => {\n    if (!liquidityMining || !account) return\n\n    if (!isActive) {\n      setRewardIncrement(BigNumber.from(0))\n      return\n    }\n\n    Promise.all([liquidityMining.totalStake(), liquidityMining.totalUserStake(account)])\n      .then(([total, user]) => {\n        if (total.eq(0)) {\n          setRewardIncrement(BigNumber.from(0))\n        } else {\n          setRewardIncrement(rewardPerTime.mul(user).div(total))\n        }\n      }).catch(console.error)\n  }, [liquidityMining, account, currentBlock, rewardPerTime, isActive])\n\n  return rewardIncrement\n}\n\nexport {\n  useMyPendingRewards,\n  useMyClaimedRewards,\n  useMyRewardsPerTime,\n}\n","import { useState, useEffect } from 'react'\nimport { BigNumber } from 'ethers'\nimport { useWeb3 } from '../web3'\n\nconst useMyUsdcBalance = (usdcContract, currentBlock) => {\n  const { account } = useWeb3()\n  const [balance, setBalance] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!account || !usdcContract) return\n\n    usdcContract.balanceOf(account).then(balance => {\n      setBalance(balance)\n    }).catch(console.error)\n  }, [account, usdcContract, currentBlock])\n\n  return balance\n}\n\nconst useMyUsdtBalance = (usdtContract, currentBlock) => {\n  const { account } = useWeb3()\n  const [balance, setBalance] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!account || !usdtContract) return\n\n    usdtContract.balanceOf(account).then(balance => {\n      setBalance(balance)\n    }).catch(console.error)\n  }, [account, usdtContract, currentBlock])\n\n  return balance\n}\n\nconst useMyDaiBalance = (daiContract, currentBlock) => {\n  const { account } = useWeb3()\n  const [balance, setBalance] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!account || !daiContract) return\n\n    daiContract.balanceOf(account).then(balance => {\n      setBalance(balance)\n    }).catch(console.error)\n  }, [account, daiContract, currentBlock])\n\n  return balance\n}\n\nconst useMyUsdcAllowance = (liquidityMining, usdcContract, currentBlock) => {\n  const { account } = useWeb3()\n  const [allowance, setAllowance] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!account || !liquidityMining || !usdcContract) return\n\n    usdcContract.allowance(account, liquidityMining.address).then(allowance => {\n      setAllowance(allowance)\n    }).catch(console.error)\n  }, [account, liquidityMining, usdcContract, currentBlock])\n\n  return allowance\n}\n\nconst useMyUsdtAllowance = (liquidityMining, usdtContract, currentBlock) => {\n  const { account } = useWeb3()\n  const [allowance, setAllowance] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!account || !liquidityMining || !usdtContract) return\n\n    usdtContract.allowance(account, liquidityMining.address).then(allowance => {\n      setAllowance(allowance)\n    }).catch(console.error)\n  }, [account, liquidityMining, usdtContract, currentBlock])\n\n  return allowance\n}\n\nconst useMyDaiAllowance = (liquidityMining, daiContract, currentBlock) => {\n  const { account } = useWeb3()\n  const [allowance, setAllowance] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!account || !liquidityMining || !daiContract) return\n\n    daiContract.allowance(account, liquidityMining.address).then(allowance => {\n      setAllowance(allowance)\n    }).catch(console.error)\n  }, [account, liquidityMining, daiContract, currentBlock])\n\n  return allowance\n}\n\nexport {\n  useMyUsdcBalance,\n  useMyUsdtBalance,\n  useMyDaiBalance,\n  useMyUsdcAllowance,\n  useMyUsdtAllowance,\n  useMyDaiAllowance,\n}\n","import { useState, useEffect } from 'react'\nimport { useWeb3 } from '../web3'\n\nconst useCanStake = (systemState, StateEnum) => {\n  const { account } = useWeb3()\n  const [canStake, setCanStake] = useState(false)\n\n  useEffect(() => {\n    setCanStake(account && [StateEnum.Ready, StateEnum.Active].includes(systemState))\n  }, [account, systemState, StateEnum])\n\n  return canStake\n}\n\nconst useCanPayout = (pendingRewards) => {\n  const { account } = useWeb3()\n  const [canPayout, setCanPayout] = useState(false)\n\n  useEffect(() => {\n    setCanPayout(account && pendingRewards.gt(0))\n  }, [account, pendingRewards])\n\n  return canPayout\n}\n\nconst useCanWithdraw = (usdc, usdt, dai) => {\n  const { account } = useWeb3()\n  const [canWithdraw, setCanWithdraw] = useState(false)\n\n  useEffect(() => {\n    setCanWithdraw(account && (usdc.gt(0) || usdt.gt(0) || dai.gt(0)))\n  }, [account, usdc, usdt, dai])\n\n  return canWithdraw\n}\n\nexport {\n  useCanStake,\n  useCanPayout,\n  useCanWithdraw,\n}\n","export default __webpack_public_path__ + \"static/media/logo.46d0239c.png\";","export default __webpack_public_path__ + \"static/media/wallet.7d4fae45.svg\";","import { useState, useEffect } from 'react'\nimport { useData } from '../dataContext'\nimport { useWeb3 } from '../web3'\nimport logo from '../assets/images/logo.png'\nimport wallet from '../assets/images/wallet.svg'\nimport { connect } from '../web3/userSupplied'\n\nconst AccountDisplay = () => {\n  const truncate = (fullStr, strLen, separator) => {\n    if (fullStr.length <= strLen) return fullStr;\n\n    separator = separator || '...';\n\n    const sepLen = separator.length\n    const charsToShow = strLen - sepLen\n    const frontChars = Math.ceil(charsToShow / 2 + 1) // accounts for the \"0x\"\n    const backChars = Math.floor(charsToShow / 2 - 1) // accounts for the \"0x\"\n\n    return fullStr.substr(0, frontChars) + separator + fullStr.substr(fullStr.length - backChars);\n  }\n\n  const { account } = useWeb3()\n\n  if (account) {\n    return (\n      <div>\n        {truncate(account, 25)}\n      </div>\n    )\n  } else {\n    return (\n      <button className=\"underline\" onClick={() => connect()}>\n        Connect Web3 Account\n      </button>\n    )\n  }\n}\n\nconst Top = () => {\n  return (\n    <div className=\"flex justify-between mb-16\">\n      <div className=\"w-24 p-1\">\n        <img src={logo} alt=\"logo\" />\n      </div>\n      <div className=\"flex items-center\">\n        <div>\n          <img src={wallet} alt=\"wallet\" />\n        </div>\n        <div className=\"ml-3 text-gray-400 text-sm\">\n          <AccountDisplay />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst Title = () => {\n  const { systemState, StateEnum, liquidityMining } = useData()\n\n  const [liquidityMiningState, setLiquidityMiningState] = useState(\"Not Scheduled\")\n  const [badgeColor, setBadgeColor] = useState(\"bg-red\")\n\n  useEffect(() => {\n    if (systemState === StateEnum.NotScheduled) {\n      setLiquidityMiningState(\"Not Scheduled\")\n      setBadgeColor(\"bg-red\")\n    } else if (systemState === StateEnum.Scheduled) {\n      setLiquidityMiningState(\"Scheduled\")\n      setBadgeColor(\"bg-yellow\")\n    } else if (systemState === StateEnum.Ready) {\n      setLiquidityMiningState(\"Ready\")\n      setBadgeColor(\"bg-green\")\n    } else if (systemState === StateEnum.Active) {\n      setLiquidityMiningState(\"Active\")\n      setBadgeColor(\"bg-green\")\n    } else if (systemState === StateEnum.Over) {\n      setLiquidityMiningState(\"Over\")\n      setBadgeColor(\"bg-red\")\n    } else {\n      setLiquidityMiningState(\"Not Scheduled\")\n      setBadgeColor(\"bg-red\")\n    }\n  }, [systemState, StateEnum])\n\n  return (\n    <div className=\"flex flex-col items-center\">\n      <div className=\"flex justify-center items-center\">\n        <h1 className=\"text-xl\">\n          Liquidity Mining\n        </h1>\n        <div className={`ml-3 py-1 px-2 ${badgeColor} text-gray-900 text-xs rounded`}>\n          {liquidityMiningState}\n        </div>\n      </div>\n      <div className=\"mt-2 text-gray-400 text-sm underline\">\n        <a target=\"_blank\" rel=\"noreferrer\" href={`https://etherscan.io/address/${liquidityMining?.address}`}>View on Etherscan</a>\n      </div>\n    </div>\n  )\n}\n\nconst Header = () => {\n  return (\n    <div className=\"pt-2 pb-6\">\n      <Top />\n      <Title />\n    </div>\n  )\n}\n\nexport default Header\n","export default __webpack_public_path__ + \"static/media/question.6cbe55dd.svg\";","import Tippy from '@tippyjs/react'\nimport question from '../../assets/images/question.svg'\n\nconst Tooltip = ({ children }) => {\n  return (\n  <Tippy content={children} className=\"border-2 border-white rounded text-center text-xs font-normal p-2 bg-gray-900\">\n    <img src={question} alt=\"tooltip\" />\n  </Tippy>\n  )\n}\n\nexport default Tooltip\n","import Tooltip from './Tooltip'\n\nconst ValueItem = ({ children, value, bigValue = false, bold = false, icon, tooltipText }) => {\n  return (\n    <div className=\"mx-4 mb-6 text-sm\">\n      <div className={`${bold ? \"text-white font-bold\" : \"text-gray-400 font-normal\"} mb-2`}>\n        {tooltipText\n          ? <div className=\"flex justify-center items-center\">\n              <div className=\"mr-2\">{children}</div>\n              <Tooltip>{tooltipText}</Tooltip>\n            </div>\n          : children}\n      </div>\n      <div className={`${bigValue ? \"text-lg\" : \"text-sm\"} ${bold ? \"font-bold\" : \"font-normal\"}`}>\n        {icon\n          ? <div className=\"flex justify-center items-center\">\n              <div className=\"mr-2\">\n                <img src={icon} alt=\"icon\" />\n              </div>\n              <div>{value}</div>\n            </div>\n          : value\n        }\n      </div>\n    </div>\n  )\n}\n\nconst Row = ({ children, value, total }) => {\n  return (\n    <div className=\"flex mb-1 items-center\">\n      <div className=\"w-1/2 text-right text-gray-400\">\n        {children}\n      </div>\n      <div className={`w-1/2 ml-2 text-right truncate ${total ? \"font-bold\": \"\"}`}>\n        {value}\n      </div>\n    </div>\n  )\n}\n\nexport { ValueItem, Row }\n","import { useData } from '../dataContext'\nimport { ValueItem } from './shared/Value'\n\nconst Container = ({ children }) => {\n  return (\n    <div className=\"flex flex-wrap justify-center text-center border-b border-t pt-6 mb-6 border-gray-500\">\n      {children}\n    </div>\n  )\n}\n\nconst currentTimeTooltip = \"\\\"Current Time\\\" comes from the timestamp of the most recent Ethereum block. That's why it slightly jumps around, and probably doesn't directly match your system clock.\"\n\nconst NotScheduled = () => {\n  const { currentTime } = useData()\n\n  return (\n    <Container>\n      <ValueItem value={currentTime} tooltipText={currentTimeTooltip}>Current Time</ValueItem>\n    </Container>\n  )\n}\n\nconst Scheduled = () => {\n  const { currentTime, startTime, timeUntilKickoff } = useData()\n\n  return (\n    <Container>\n      <ValueItem value={currentTime} tooltipText={currentTimeTooltip}>Current Time</ValueItem>\n      <ValueItem value={startTime}>Start Time</ValueItem>\n      <ValueItem value={timeUntilKickoff}>Time Until Kickoff</ValueItem>\n    </Container>\n  )\n}\n\nconst Ready = () => {\n  const { currentTime, rewardsPerTime } = useData()\n\n  return (\n    <Container>\n      <ValueItem value={currentTime} tooltipText={currentTimeTooltip}>Current Time</ValueItem>\n      <ValueItem value={rewardsPerTime}>SARCO Per Second</ValueItem>\n    </Container>\n  )\n}\n\nconst Active = () => {\n  const { currentTime, firstStakeTime, endTime, remainingTime, rewardsPerTime } = useData()\n\n  return (\n    <Container>\n      <ValueItem value={firstStakeTime}>Start Time</ValueItem>\n      <ValueItem value={currentTime} tooltipText={currentTimeTooltip}>Current Time</ValueItem>\n      <ValueItem value={endTime}>End Time</ValueItem>\n      <ValueItem value={remainingTime}>Remaining Time</ValueItem>\n      <ValueItem value={rewardsPerTime}>SARCO Per Second</ValueItem>\n    </Container>\n  )\n}\n\nconst Over = () => {\n  const { currentTime, firstStakeTime, endTime, rewardsPerTime } = useData()\n\n  return (\n    <Container>\n      <ValueItem value={firstStakeTime}>Start Time</ValueItem>\n      <ValueItem value={endTime}>End Time</ValueItem>\n      <ValueItem value={currentTime} tooltipText={currentTimeTooltip}>Current Time</ValueItem>\n      <ValueItem value={rewardsPerTime}>SARCO Per Second</ValueItem>\n    </Container>\n  )\n}\n\nconst Blocks = () => {\n  const { systemState, StateEnum } = useData()\n\n  if (systemState === StateEnum.NotScheduled) {\n    return <NotScheduled />\n  } else if (systemState === StateEnum.Scheduled) {\n    return <Scheduled />\n  } else if (systemState === StateEnum.Ready) {\n    return <Ready />\n  } else if (systemState === StateEnum.Active) {\n    return <Active />\n  } else if (systemState === StateEnum.Over) {\n    return <Over />\n  } else {\n    return <></>\n  }\n}\n\nexport default Blocks\n","export default __webpack_public_path__ + \"static/media/usdc-small.7f23db62.svg\";","export default __webpack_public_path__ + \"static/media/usdt-small.230eb725.svg\";","export default __webpack_public_path__ + \"static/media/dai-small.102cb29e.svg\";","import { useData } from '../dataContext'\nimport { ValueItem } from './shared/Value'\nimport usdc from '../assets/images/usdc-small.svg'\nimport usdt from '../assets/images/usdt-small.svg'\nimport dai from '../assets/images/dai-small.svg'\n\nconst Container = ({ children }) => {\n  return (\n    <div className=\"flex flex-col text-center\">\n      {children}\n    </div>\n  )\n}\n\nconst SectionContainer = ({ children, topBorder = false }) => {\n  return (\n    <div className={`flex flex-col sm:flex-row flex-wrap justify-center ${topBorder ? \"pt-6 sm:pt-0 border-t border-gray-500 sm:border-none\" : \"border-none\"}`}>\n      {children}\n    </div>\n  )\n}\n\nconst GlobalStats = () => {\n  const {\n    totalEmittedRewards,\n    totalUnemittedRewards,\n    totalClaimedRewards,\n    totalUnclaimedRewards,\n    totalRewards,\n    totalStakeUsdc,\n    totalStakeUsdt,\n    totalStakeDai,\n    totalStakeStablecoins,\n  } = useData()\n\n  return (\n    <Container>\n      <SectionContainer>\n        <ValueItem bigValue value={totalEmittedRewards}>Emitted SARCO</ValueItem>\n        <ValueItem bigValue value={totalUnemittedRewards}>Unemitted SARCO</ValueItem>\n        <ValueItem bigValue bold value={totalRewards}\n          tooltipText=\"&quot;Total SARCO&quot; is the sum of Emitted SARCO and Unemitted SARCO, which shows the total number of SARCO that liquidity mining will produce\"\n        >Total SARCO</ValueItem>\n      </SectionContainer>\n      <SectionContainer topBorder>\n        <ValueItem bigValue value={totalClaimedRewards}\n          tooltipText=\"&quot;Total Claimed SARCO&quot; is the sum of all SARCO which have been claimed (via transactions to own wallets) from liquidity mining, by all participants\"\n        >Total Claimed SARCO</ValueItem>\n        <ValueItem bigValue value={totalUnclaimedRewards}\n          tooltipText=\"&quot;Total Unclaimed SARCO&quot; is calculated as as &quot;Emitted SARCO&quot; minus &quot;Total Claimed SARCO&quot;\"\n        >Total Unclaimed SARCO</ValueItem>\n      </SectionContainer>\n      <SectionContainer topBorder>\n        <ValueItem bigValue icon={usdc} value={totalStakeUsdc}>Total Locked USDC</ValueItem>\n        <ValueItem bigValue icon={usdt} value={totalStakeUsdt}>Total Locked USDT</ValueItem>\n        <ValueItem bigValue icon={dai} value={totalStakeDai}>Total Locked DAI</ValueItem>\n        <ValueItem bigValue bold value={totalStakeStablecoins}\n          tooltipText=\"&quot;Total Locked Stablecoins&quot; refers to the sum of all stablecoins that have been locked by everyone participating in liquidity mining\"\n        >Total Locked Stablecoins</ValueItem>\n      </SectionContainer>\n    </Container>\n  )\n}\n\nexport default GlobalStats\n","import { useState, useCallback } from 'react'\nimport { toast } from 'react-toastify'\n\nconst useTransaction = () => {\n  const [pending, setPending] = useState(false)\n\n  const contractCall = useCallback(\n    (contractFn, parameters, pendingMessage, failedMessage, successMessage, successCallback, completedCallback) => {\n      setPending(true)\n      let toastId\n      contractFn(...parameters)\n        .then(txResponse => {\n          toastId = toast.info(pendingMessage, {\n            autoClose: false,\n            closeOnClick: false,\n            draggable: false\n          })\n          return Promise.all([txResponse.wait(), toastId])\n        })\n        .then(([txReceipt, toastId]) => {\n          setPending(false)\n          toast.dismiss(toastId)\n          if (txReceipt.status === 0) {\n            toast.error(failedMessage)\n          } else if (txReceipt.status === 1) {\n            toast.success(successMessage)\n            if (successCallback) successCallback()\n          } else {\n            toast.error(\"Not sure what happened with that transaction\")\n          }\n          if (completedCallback) completedCallback()\n        })\n        .catch(error => {\n          console.error(error)\n          setPending(false)\n          toast.dismiss(toastId)\n          toast.error(\"There was an error! Check your browser's console logs for more details.\")\n        })\n    }, [])\n\n  return { contractCall, pending }\n}\n\nexport { useTransaction }","const Button = ({ children, icon, disabled, className = \"\", ...rest }) => {\n  return (\n    <button {...rest} disabled={disabled} className={`border-2 border-white p-2 min-w-full ${disabled ? \"opacity-50 cursor-not-allowed\" : \"\"} ${className}`}>\n      <div className=\"flex justify-center text-sm items-center\">\n        <div>\n          {children}\n        </div>\n        {icon && <div className=\"ml-3\">\n          <img src={icon} alt=\"icon\" />\n        </div>}\n      </div>\n    </button>\n  )\n}\n\nexport { Button }\n","export default __webpack_public_path__ + \"static/media/usdc.cad2e94f.svg\";","export default __webpack_public_path__ + \"static/media/usdt.9f777612.svg\";","export default __webpack_public_path__ + \"static/media/dai.a8d8a983.svg\";","export default __webpack_public_path__ + \"static/media/lock.0df973d1.svg\";","import { useState, useEffect, useCallback } from 'react'\nimport { BigNumber, utils } from 'ethers'\nimport numeral from 'numeral'\nimport { useData } from '../dataContext'\nimport { useTransaction } from '../dataContext/transactions'\nimport { useWeb3 } from '../web3'\nimport { Button } from './shared/Button'\nimport usdcIcon from '../assets/images/usdc.svg'\nimport usdtIcon from '../assets/images/usdt.svg'\nimport daiIcon from '../assets/images/dai.svg'\nimport lock from '../assets/images/lock.svg'\n\nconst StakeForm = () => {\n  const { account } = useWeb3()\n  const {\n    liquidityMining,\n    usdcContract,\n    usdtContract,\n    daiContract,\n    myUsdcBalance,\n    myUsdtBalance,\n    myDaiBalance,\n    myUsdcAllowance,\n    myUsdtAllowance,\n    myDaiAllowance,\n    decimalsUsdc,\n    decimalsUsdt,\n    decimalsDai,\n    canStake,\n  } = useData()\n\n  const [usdc, setUsdc] = useState(0)\n  const [usdt, setUsdt] = useState(0)\n  const [dai, setDai] = useState(0)\n\n  const [usdcBig, setUsdcBig] = useState(BigNumber.from(0))\n  const [usdtBig, setUsdtBig] = useState(BigNumber.from(0))\n  const [daiBig, setDaiBig] = useState(BigNumber.from(0))\n\n  const [buttonText, setButtonText] = useState(\"Stake\")\n  const { contractCall, pending } = useTransaction()\n  const [callData, setCallData] = useState([])\n\n  const [buttonEnabled, setButtonEnabled] = useState(false)\n\n  useEffect(() => {\n    setButtonEnabled(!pending && (usdcBig.gt(0) || usdtBig.gt(0) || daiBig.gt(0)))\n  }, [pending, usdcBig, usdtBig, daiBig])\n\n  useEffect(() => {\n    setUsdc(0)\n    setUsdt(0)\n    setDai(0)\n  }, [account])\n\n  useEffect(() => {\n    setUsdcBig(utils.parseUnits((usdc || 0).toFixed(decimalsUsdc), decimalsUsdc))\n  }, [usdc, decimalsUsdc])\n\n  useEffect(() => {\n    setUsdtBig(utils.parseUnits((usdt || 0).toFixed(decimalsUsdt), decimalsUsdt))\n  }, [usdt, decimalsUsdt])\n\n  useEffect(() => {\n    setDaiBig(utils.parseUnits((dai || 0).toFixed(decimalsDai), decimalsDai))\n  }, [dai, decimalsDai])\n\n  useEffect(() => {\n    if (myUsdcAllowance.lt(usdcBig)) {\n      setButtonText(\"Approve USDC\")\n      if (!usdcContract) return\n      setCallData([\n        usdcContract.approve,\n        [liquidityMining?.address, BigNumber.from(2).pow(BigNumber.from(256)).sub(BigNumber.from(1))],\n        \"Approving USDC...\", \"USDC approval failed!\", \"USDC approval made!\"\n      ])\n    } else if (myUsdtAllowance.lt(usdtBig)) {\n      setButtonText(\"Approve USDT\")\n      if (!usdtContract) return\n      setCallData([\n        usdtContract.approve,\n        [liquidityMining?.address, BigNumber.from(2).pow(BigNumber.from(256)).sub(BigNumber.from(1))],\n        \"Approving USDT...\", \"USDT approval failed!\", \"USDT approval made!\"\n      ])\n    } else if (myDaiAllowance.lt(daiBig)) {\n      setButtonText(\"Approve DAI\")\n      if (!daiContract) return\n      setCallData([\n        daiContract.approve,\n        [liquidityMining?.address, BigNumber.from(2).pow(BigNumber.from(256)).sub(BigNumber.from(1))],\n        \"Approving DAI...\", \"DAI approval failed!\", \"DAI approval made!\"\n      ])\n    } else {\n      setButtonText(\"Lock my Stablecoins\")\n      if (!liquidityMining) return\n      setCallData([\n        liquidityMining.stake,\n        [usdcBig, usdtBig, daiBig, { }],\n        \"Locking coins...\", \"Lock failed!\", \"Lock made!\",\n        () => {\n          setUsdc(0)\n          setUsdt(0)\n          setDai(0)\n        }\n      ])\n    }\n  }, [usdc, usdt, dai, usdcBig, usdtBig, daiBig, myUsdcAllowance, myUsdtAllowance, myDaiAllowance, liquidityMining, usdcContract, usdtContract, daiContract])\n\n  const calls = e => {\n    e.preventDefault()\n    contractCall(...callData)\n  }\n\n  const Input = useCallback(({ currency, value, setValue, balance, decimals, icon }) => {\n    const calculateValue = setValue => {\n      return e => {\n        let normalizedValue = \"\"\n        const inputValue = e.target.value\n        if (inputValue) normalizedValue = Math.min(inputValue, numeral(balance).value())\n        setValue(normalizedValue)\n      }\n    }\n\n    const makeStep = decimals => {\n      return `0.${Array(decimals).fill(0).join('')}`.slice(0, -1) + '1'\n    }\n\n    const inputDisable = !(canStake && numeral(balance).value() > 0)\n\n    return (\n      <div className=\"flex mb-4 text-sm\">\n        <div className=\"mr-4 flex flex-col items-center w-10\">\n          <div className=\"uppercase mb-2\">{currency}</div>\n          <div>\n            <img src={icon} alt=\"icon\" />\n          </div>\n        </div>\n        <div className=\"w-full\">\n          <div className=\"flex justify-between mb-2 text-gray-400\">\n            <div className=\"mr-2\">Amount*</div>\n            <div>Balance: {balance}</div>\n          </div>\n          <input type=\"number\" step={makeStep(decimals)} disabled={inputDisable} required name={currency} id={currency} value={value} onChange={calculateValue(setValue)} min=\"0\" max={balance} className={`w-full border-2 border-gray-500 ${inputDisable ? 'text-gray-400' : 'text-white'} bg-gray-900`} placeholder={balance} />\n        </div>\n      </div>\n    )\n  }, [canStake])\n\n  return (\n    <div>\n      <form onSubmit={calls}>\n        <div className=\"mt-2 flex flex-col w-full\">\n          <Input currency=\"usdc\" value={usdc} setValue={setUsdc} balance={myUsdcBalance} decimals={decimalsUsdc} icon={usdcIcon} />\n          <Input currency=\"usdt\" value={usdt} setValue={setUsdt} balance={myUsdtBalance} decimals={decimalsUsdt} icon={usdtIcon} />\n          <Input currency=\"dai\" value={dai} setValue={setDai} balance={myDaiBalance} decimals={6} icon={daiIcon} />\n        </div>\n        <div className=\"mx-6\">\n          <div className=\"mb-4 text-center text-gray-400 text-2xs\">\n            Please see the documentation below for more info.\n          </div>\n          <Button type=\"submit\" disabled={!buttonEnabled} icon={lock}>\n            {buttonText}\n          </Button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default StakeForm\n","import { useData } from '../dataContext'\nimport { Row } from './shared/Value'\nimport { useState, useEffect } from 'react'\nimport { useTransaction } from '../dataContext/transactions'\nimport { useWeb3 } from '../web3'\nimport { Button } from './shared/Button'\n\nconst Claim = () => {\n  const {\n    myRewardsPerTime,\n    myPendingRewards,\n    myClaimedRewards,\n    myTotalRewards,\n  } = useData()\n\n  const { account } = useWeb3()\n  const { liquidityMining, canPayout } = useData()\n\n  const { contractCall, pending } = useTransaction()\n  const [payoutEnabled, setPayoutEnabled] = useState(false)\n\n  useEffect(() => {\n    setPayoutEnabled(!pending && canPayout)\n  }, [pending, canPayout])\n\n  const payout = () => {\n    contractCall(\n      liquidityMining.payout, [account, { }],\n      \"Paying out rewards...\", \"Payout failed!\", \"Payout successful!\"\n    )\n  }\n\n  return (\n    <div>\n      <div className=\"mx-4 mb-4\">\n        <div className=\"mb-3\">\n          <Row value={myRewardsPerTime}>SARCO / second</Row>\n        </div>\n        <Row value={myPendingRewards}>SARCO Pending</Row>\n        <Row value={myClaimedRewards}>SARCO Claimed</Row>\n        <Row value={myTotalRewards} total>SARCO Total</Row>\n      </div>\n      <Button disabled={!payoutEnabled} onClick={payout}>\n        Claim my SARCO\n      </Button>\n    </div>\n  )\n}\n\nexport default Claim\n","export default __webpack_public_path__ + \"static/media/unlock.c85dfc87.svg\";","import { useState, useEffect } from 'react'\nimport { useData } from '../dataContext'\nimport { Row } from './shared/Value'\nimport { Button } from './shared/Button'\nimport { useWeb3 } from '../web3'\nimport { useTransaction } from '../dataContext/transactions'\nimport unlock from '../assets/images/unlock.svg'\n\nconst Unlock = () => {\n  const { account } = useWeb3()\n  const {\n    myStakeUsdc,\n    myStakeUsdt,\n    myStakeDai,\n    myStakedStablecoins,\n    liquidityMining,\n    canPayout,\n    canWithdraw,\n  } = useData()\n\n  const { contractCall, pending } = useTransaction()\n\n  const [withdrawEnabled, setWithdrawEnabled] = useState(false)\n\n  useEffect(() => {\n    setWithdrawEnabled(!pending && canWithdraw)\n  }, [pending, canPayout, canWithdraw])\n\n  const withdraw = () => {\n    contractCall(\n      liquidityMining.withdraw, [account, { }],\n      \"Unlocking stablecoins...\", \"Unlock failed!\", \"Unlock successful!\"\n    )\n  }\n\n  return (\n    <div>\n      <div className=\"mx-4 mb-4\">\n        <Row value={myStakeUsdc}>USDC Locked</Row>\n        <Row value={myStakeUsdt}>USDT Locked</Row>\n        <Row value={myStakeDai}>DAI Locked</Row>\n        <Row value={myStakedStablecoins} total>Total Locked</Row>\n      </div>\n      <Button disabled={!withdrawEnabled} onClick={withdraw} icon={unlock}>\n        Unlock my Stablecoins\n      </Button>\n    </div>\n  )\n}\n\nexport default Unlock\n","import Blocks from './Blocks'\nimport GlobalStats from './GlobalStats'\nimport StakeForm from './StakeForm'\nimport Claim from './Claim'\nimport Unlock from './Unlock'\n\nconst Body = () => {\n  return (\n    <div>\n      <Blocks />\n      <GlobalStats />\n      <div className=\"border-2 border-gray-500 mb-6 py-6 px-4 flex justify-center\">\n        <div className=\"max-w-2xl flex flex-col sm:flex-row sm:items-end\">\n          <div className=\"sm:w-1/2 mb-12 sm:mb-8 sm:mr-2\">\n            <StakeForm />\n          </div>\n          <div className=\"sm:w-1/2 text-sm mb-8\">\n            <div className=\"mx-6\">\n              <div className=\"mb-12\">\n                <Claim />\n              </div>\n              <Unlock />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Body\n","import { useData } from '../dataContext'\n\nconst Title = ({ children }) => {\n  return (\n    <div className=\"text-xl pt-3 mb-6 text-center sm:text-left\">{children}</div>\n  )\n}\n\nconst Question = ({ children }) => {\n  return (\n    <div className=\" mb-2\">\n      {children}\n    </div>\n  )\n}\n\nconst Answer = ({ children }) => {\n  return (\n    <div className=\"text-xs mb-4 text-gray-400\">\n      {children}\n    </div>\n  )\n}\n\nconst FAQ = () => {\n  const { sarcoContract } = useData()\n\n  return (\n    <div>\n      <Title>FAQ</Title>\n      \n      <Question>What is Sarcophagus?</Question>\n      <Answer>It is a decentralized dead man's switch application built on Ethereum and Arweave, you can learn more about the project by visiting <a className=\"underline\" href=\"https://sarcophagus.io\">sarcophagus.io</a>, or <a className=\"underline\" href=\"https://sarcophagus.io/assets/pdf/sarcophagus_litepaper_v0.2.pdf\">reading the litepaper</a>.</Answer>\n      \n      <Question>What is SARCO?</Question>\n      <Answer>SARCO is an ERC20 token with a fixed supply of 100,000,000. More information on the SARCO token can be found at <a className=\"underline\" href=\"https://sarcophagus.io/sarco_token.html\">sarcophagus.io/sarco_token.html</a> the token is used exclusively by the parties interacting with the dApp.</Answer>\n\n      <Question>What is liquidity mining?</Question>\n      <Answer>The process of locking stablecoins into a contract for a period of time, forgoing the opportunity of time-value yield for those stablecoins in exchange for a proportional emission of SARCO tokens. </Answer>\n\n      <Question>How long will this last?</Question>\n      <Answer>The Sarcophagus liquidity mining contract will last one year, and 1,000,000 SARCO tokens will be emitted.</Answer>\n\n      <Question>How are the SARCO tokens emitted?</Question>\n      <Answer>The contract specifies that 1,000,000 SARCO tokens will be emitted equally, per second, to the owners of the stablecoins in the contract. The distribution curve is linear, meaning the exact same number of tokens will be emitted per second on day 0 and day 364. You can see the value by looking at the \"SARCO Per Second\" metric.</Answer>\n\n      <Question>What stablecoins are accepted?</Question>\n      <Answer>The contract will accept USDC, USDT, and DAI. These stablecoins represent the vast majority of stablecoins in the market by volume and market cap. These coins are only accepted through the functions shown on this page, any other attempt to lock tokens using custom methods should be done at your own risk.</Answer>\n\n      <Question>How do I lock my stablecoins?</Question>\n      <Answer>First, connect your web3 wallet containing the tokens you wish to lock. Input the amount of each accepted stablecoins you wish to lock in their respective fields; making sure there are zeros in the fields you do not wish to lock. You will then be asked to \"Approve\" these stablecoins by your wallet. Once this approval is complete you will be able to click on the \"Lock my Stablecoins\" button. After the transaction is confirmed, you will see your address's current totals in the lower right section.</Answer>\n\n      <Question>When can I unlock my stablecoins?</Question>\n      <Answer>Any time you want. All tokens are 100% liquid and can be locked, unlocked and claimed at any time.</Answer>\n\n      <Question>How do I unlock my stablecoins?</Question>\n      <Answer>Simply click the \"Unlock my Stablecoins\" button and confirm the transaction on your wallet. This function will unlock all of the stablecoins you have locked, and will also automatically claim all SARCO that has been emitted to you.</Answer>\n\n      <Question>How do I claim the SARCO that has been emitted but also keep my stablecoins locked?</Question>\n      <Answer>Use the \"Claim my SARCO\" function. This will require a transaction from your wallet and the SARCO tokens will be unlocked. You will need to add a \"custom token\" in metamask to see it in your wallet (<a className=\"underline\" href=\"https://metamask.zendesk.com/hc/en-us/articles/360015489031-How-to-View-See-Your-Tokens-and-Custom-Tokens-in-Metamask\">instructions here</a>). The token address to use is: {sarcoContract?.address} and can be verified on <a className=\"underline\" href={`https://etherscan.io/token/${sarcoContract?.address}`}>Etherscan</a>.</Answer>\n\n      <Question>What gas settings should I use?</Question>\n      <Answer>It is suggested that you use the \"high\" presets on MetaMask, or to visit <a className=\"underline\" href=\"https://ethgasstation.info\">ethgasstation.info</a> and use the \"fast\" price.</Answer>\n\n      <Question>Why do some of the metrics displayed not add up or not make sense?</Question>\n      <Answer>This frontend is pulling directly from the Ethereum blockchain, please give it a few seconds to fully update and you will be able to see the correct metrics.</Answer>\n      \n      <div className=\"border-b border-gray-500 mb-6 pt-6\" />\n\n      <Title>Definitions</Title>\n\n      <Question>Locker</Question>\n      <Answer>One who locks stablecoins into this liquidity mining contract.</Answer>\n\n      <Question>Start Time</Question>\n      <Answer>When the liquidity mining contract is open to accept stablecoins and emit SARCO.</Answer>\n\n      <Question>End Time</Question>\n      <Answer>When the last SARCO tokens will be emitted and when stablecoin locking will be disabled. Unlocking of stablecoins and claiming of SARCO is still available after this time.</Answer>\n\n      <Question>Current time</Question>\n      <Answer>Current time pulled from the Ethereum blockchain.</Answer>\n\n      <Question>SARCO Per Second</Question>\n      <Answer>The number of SARCO tokens emitted to the aggregate stablecoin lockers per second.</Answer>\n\n      <Question>Emitted SARCO</Question>\n      <Answer>The number of SARCO tokens that have been emitted to stablecoin lockers thus far.</Answer>\n\n      <Question>Unemitted SARCO</Question>\n      <Answer>The number of SARCO tokens in the contract that have yet to be emitted.</Answer>\n\n      <Question>Total SARCO</Question>\n      <Answer>The sum of emitted and unemitted SARCO tokens, set to 1,000,000, which equals 1% of the fixed 100,000,000 SARCO token supply.</Answer>\n\n      <Question>Total Claimed SARCO</Question>\n      <Answer>The number of SARCO tokens that have been emitted AND claimed by stablecoin lockers. These tokens are fully liquid.</Answer>\n\n      <Question>Total Unclaimed SARCO</Question>\n      <Answer>The number of SARCO tokens that have been emitted, but are still sitting in the liquidity mining contract waiting for the locker to claim them.</Answer>\n\n      <Question>Total Locked USDC, USDT, DAI</Question>\n      <Answer>The number of each type of accepted stablecoin that is currently locked in the liquidity mining contract.</Answer>\n\n      <Question>Total Locked Stablecoins</Question>\n      <Answer>The total number of stablecoins currently locked in the liquidity mining contract.</Answer>\n\n      <Question>USDC/USDT/DAI Input Fields</Question>\n      <Answer>These fields are used to lock your stablecoins. The amounts in unused fields must be \"0\" for any operation. The first step is to approve your stablecoins (only has to be done once per coin). The second step is to lock the stablecoins. The \"balance\" is the current unlocked balance in your wallet.</Answer>\n\n      <Question>Approve my Stablecoins</Question>\n      <Answer>Used to approve your ERC20 stablecoins for use on the liquidity mining contract.</Answer>\n\n      <Question>Lock my Stablecoins</Question>\n      <Answer>Used to lock your stablecoins into the liquidity mining contract.</Answer>\n\n      <Question>SARCO/second</Question>\n      <Answer>The number of SARCO you are currently being emitted per second.</Answer>\n\n      <Question>SARCO Pending/Claimed/Total</Question>\n      <Answer>The number of SARCO tokens that have been emitted to you and are claimable, the number of tokens that you have claimed into your wallet, and the total number of SARCO that have been emitted to your address respectively.</Answer>\n\n      <Question>USDC/USDT/DAI/Total Locked</Question>\n      <Answer>The number of stablecoins you currently have locked in the liquidity mining contract.</Answer>\n\n      <Question>Unlock my Stablecoins</Question>\n      <Answer>When executed, this will unlock all of your stable coins back into your wallet, and will automatically claim all of your pending SARCO tokens.</Answer>\n    </div>\n  )\n}\n\nexport default FAQ\n","import { useWeb3 } from '../web3'\nimport packageJson from '../../package.json'\n\nconst Footer = () => {\n  const { name } = useWeb3()\n\n  return (\n    <div className=\"text-gray-400 text-xs my-4\">\n      <div className=\"flex justify-between pb-6\">\n        <div>v{packageJson.version + '+' + process.env.REACT_APP_GIT_HASH}</div>\n        <div>{name}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Footer\n","import Header from './components/Header'\nimport Body from './components/Body'\nimport FAQ from './components/FAQ'\nimport Footer from './components/Footer'\n\nconst App = () => {\n  return (\n    <div className=\"container min-h-screen flex flex-col justify-between\">\n      <div>\n        <Header />\n        <Body />\n        <FAQ />\n      </div>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ToastContainer } from 'react-toastify'\nimport './index.css'\nimport App from './App'\nimport { Web3Provider } from './web3'\nimport { DataProvider } from './dataContext'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Web3Provider>\n      <DataProvider>\n        <App />\n        <ToastContainer closeButton={false} />\n      </DataProvider>\n    </Web3Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}